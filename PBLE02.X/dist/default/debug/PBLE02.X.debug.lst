

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 14 16:36:02 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	text26,global,reloc=2,class=CODE,delta=1
    35                           	psect	text27,global,reloc=2,class=CODE,delta=1
    36                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Generated 17/10/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000000                     _PORTC	set	3970
    79   000000                     _PORTB	set	3969
    80   000000                     _SPBRG	set	4015
    81   000000                     _SPBRGH	set	4016
    82   000000                     _BAUDCON	set	4024
    83   000000                     _TXSTA	set	4012
    84   000000                     _RCREG	set	4014
    85   000000                     _PORTA	set	3968
    86   000000                     _PORTD	set	3971
    87   000000                     _TRISC	set	3988
    88   000000                     _PIR1	set	3998
    89   000000                     _ADCON1	set	4033
    90   000000                     _RCSTA	set	4011
    91   000000                     _TXREG	set	4013
    92   000000                     _TRISE	set	3990
    93   000000                     _TRISD	set	3989
    94   000000                     _TRISA	set	3986
    95   000000                     _PORTE	set	3972
    96   000000                     _TRISB	set	3987
    97                           
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101   00169A                     __pcinit:
   102                           	callstack 0
   103   00169A                     start_initialization:
   104                           	callstack 0
   105   00169A                     __initialization:
   106                           	callstack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (1 bytes)
   109   00169A  6A2D               	clrf	__pbssCOMRAM& (0+255),c
   110   00169C                     end_of_initialization:
   111                           	callstack 0
   112   00169C                     __end_of__initialization:
   113                           	callstack 0
   114   00169C  0100               	movlb	0
   115   00169E  EF4F  F006         	goto	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMRAM
   118   00002D                     __pbssCOMRAM:
   119                           	callstack 0
   120   00002D                     _started:
   121                           	callstack 0
   122   00002D                     	ds	1
   123                           
   124                           	psect	cstackCOMRAM
   125   000001                     __pcstackCOMRAM:
   126                           	callstack 0
   127   000001                     ?_digitalRead:
   128                           	callstack 0
   129   000001                     Delay40us@j:
   130                           	callstack 0
   131   000001                     Delay2ms@j:
   132                           	callstack 0
   133   000001                     lcdCommand4bits@data:
   134                           	callstack 0
   135   000001                     digitalWrite@pin:
   136                           	callstack 0
   137   000001                     digitalRead@pin:
   138                           	callstack 0
   139   000001                     pinMode@pin:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0x0
   143   000001                     	ds	1
   144   000002                     Delay2ms@k:
   145                           	callstack 0
   146   000002                     lcdCommand4bits@cmd:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x1
   150   000002                     	ds	1
   151   000003                     ??_digitalRead:
   152   000003                     lcdCommand@cmd:
   153                           	callstack 0
   154   000003                     lcdData@valor:
   155                           	callstack 0
   156   000003                     digitalWrite@value:
   157                           	callstack 0
   158   000003                     pinMode@type:
   159                           	callstack 0
   160                           
   161                           ; 2 bytes @ 0x2
   162   000003                     	ds	1
   163   000004                     lcdInit@i:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x3
   167   000004                     	ds	1
   168   000005                     ??_pinMode:
   169   000005                     ??_digitalWrite:
   170                           
   171                           ; 1 bytes @ 0x4
   172   000005                     	ds	2
   173   000007                     i2c_write_bit@bit:
   174                           	callstack 0
   175   000007                     i2c_read_bit@bit:
   176                           	callstack 0
   177                           
   178                           ; 1 bytes @ 0x6
   179   000007                     	ds	1
   180   000008                     i2cWriteByte@send_stop:
   181                           	callstack 0
   182   000008                     i2cReadByte@send_stop:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x7
   186   000008                     	ds	1
   187   000009                     ??_i2cReadByte:
   188   000009                     i2cWriteByte@byte:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x8
   192   000009                     	ds	1
   193   00000A                     i2cWriteByte@send_start:
   194                           	callstack 0
   195   00000A                     i2cReadByte@nack:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0x9
   199   00000A                     	ds	1
   200   00000B                     i2cWriteByte@bit:
   201                           	callstack 0
   202   00000B                     i2cReadByte@bit:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0xA
   206   00000B                     	ds	1
   207   00000C                     dsWriteData@address:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0xB
   211   00000C                     	ds	1
   212   00000D                     i2cReadByte@byte:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0xC
   216   00000D                     	ds	1
   217   00000E                     ?_dsReadData:
   218                           	callstack 0
   219   00000E                     dsWriteData@value:
   220                           	callstack 0
   221   00000E                     dsReadData@address:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0xD
   225   00000E                     	ds	2
   226   000010                     ??_dsReadData:
   227                           
   228                           ; 1 bytes @ 0xF
   229   000010                     	ds	1
   230   000011                     dsReadData@result:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x10
   234   000011                     	ds	2
   235   000013                     ?___awdiv:
   236                           	callstack 0
   237   000013                     dsStartClock@seconds:
   238                           	callstack 0
   239   000013                     ___awdiv@dividend:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x12
   243   000013                     	ds	2
   244   000015                     ___awdiv@divisor:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x14
   248   000015                     	ds	2
   249   000017                     ___awdiv@counter:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x16
   253   000017                     	ds	1
   254   000018                     ___awdiv@sign:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x17
   258   000018                     	ds	1
   259   000019                     ___awdiv@quotient:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x18
   263   000019                     	ds	2
   264   00001B                     ?___wmul:
   265                           	callstack 0
   266   00001B                     ___wmul@multiplier:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x1A
   270   00001B                     	ds	2
   271   00001D                     ___wmul@multiplicand:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x1C
   275   00001D                     	ds	2
   276   00001F                     ___wmul@product:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x1E
   280   00001F                     	ds	2
   281   000021                     ?_bcd2dec:
   282                           	callstack 0
   283   000021                     bcd2dec@value:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x20
   287   000021                     	ds	2
   288   000023                     ??_bcd2dec:
   289                           
   290                           ; 1 bytes @ 0x22
   291   000023                     	ds	2
   292   000025                     ?___awmod:
   293                           	callstack 0
   294   000025                     ___awmod@dividend:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x24
   298   000025                     	ds	2
   299   000027                     ___awmod@divisor:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x26
   303   000027                     	ds	2
   304   000029                     ___awmod@counter:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x28
   308   000029                     	ds	1
   309   00002A                     ___awmod@sign:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x29
   313   00002A                     	ds	1
   314   00002B                     _main$908:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x2A
   318   00002B                     	ds	2
   319                           
   320 ;;
   321 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   322 ;;
   323 ;; *************** function _main *****************
   324 ;; Defined at:
   325 ;;		line 18 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;  slot            1    0        unsigned char 
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   339 ;;      Params:         0       0       0       0       0       0       0       0       0
   340 ;;      Locals:         2       0       0       0       0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0       0       0       0       0
   342 ;;      Totals:         2       0       0       0       0       0       0       0       0
   343 ;;Total ram usage:        2 bytes
   344 ;; Hardware stack levels required when called: 6
   345 ;; This function calls:
   346 ;;		___awdiv
   347 ;;		___awmod
   348 ;;		_bcd2dec
   349 ;;		_dsInit
   350 ;;		_dsReadData
   351 ;;		_dsStartClock
   352 ;;		_dsWriteData
   353 ;;		_lcdCommand
   354 ;;		_lcdData
   355 ;;		_lcdInit
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text0
   362   000C9E                     __ptext0:
   363                           	callstack 0
   364   000C9E                     _main:
   365                           	callstack 25
   366   000C9E                     
   367                           ;main.c: 19:     ADCON1 = 0X0F;
   368   000C9E  0E0F               	movlw	15
   369   000CA0  6EC1               	movwf	193,c	;volatile
   370   000CA2                     
   371                           ;main.c: 20:     char slot;;main.c: 22:     lcdInit();
   372   000CA2  ECAE  F008         	call	_lcdInit	;wreg free
   373   000CA6                     
   374                           ;main.c: 23:     dsInit();
   375   000CA6  EC54  F00B         	call	_dsInit	;wreg free
   376   000CAA                     
   377                           ;main.c: 27:     dsWriteData(0x12,2);
   378   000CAA  0E00               	movlw	0
   379   000CAC  6E0D               	movwf	(dsWriteData@address+1)^0,c
   380   000CAE  0E02               	movlw	2
   381   000CB0  6E0C               	movwf	dsWriteData@address^0,c
   382   000CB2  0E12               	movlw	18
   383   000CB4  EC9F  F00A         	call	_dsWriteData
   384   000CB8                     
   385                           ;main.c: 28:     dsWriteData(0x34,1);
   386   000CB8  0E00               	movlw	0
   387   000CBA  6E0D               	movwf	(dsWriteData@address+1)^0,c
   388   000CBC  0E01               	movlw	1
   389   000CBE  6E0C               	movwf	dsWriteData@address^0,c
   390   000CC0  0E34               	movlw	52
   391   000CC2  EC9F  F00A         	call	_dsWriteData
   392   000CC6                     
   393                           ;main.c: 29:     dsWriteData(0x56,0);
   394   000CC6  0E00               	movlw	0
   395   000CC8  6E0D               	movwf	(dsWriteData@address+1)^0,c
   396   000CCA  0E00               	movlw	0
   397   000CCC  6E0C               	movwf	dsWriteData@address^0,c
   398   000CCE  0E56               	movlw	86
   399   000CD0  EC9F  F00A         	call	_dsWriteData
   400   000CD4                     
   401                           ;main.c: 30:     dsStartClock();
   402   000CD4  EC0C  F00B         	call	_dsStartClock	;wreg free
   403   000CD8                     l1970:
   404                           
   405                           ;main.c: 32:         lcdCommand(0x80);
   406   000CD8  0E80               	movlw	128
   407   000CDA  ECAC  F009         	call	_lcdCommand
   408   000CDE                     
   409                           ;main.c: 33:         lcdData((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10) + 48);
   410   000CDE  0E00               	movlw	0
   411   000CE0  6E0F               	movwf	(dsReadData@address+1)^0,c
   412   000CE2  0E02               	movlw	2
   413   000CE4  6E0E               	movwf	dsReadData@address^0,c
   414   000CE6  ECD0  F009         	call	_dsReadData	;wreg free
   415   000CEA  0E5F               	movlw	95
   416   000CEC  140E               	andwf	?_dsReadData^0,w,c
   417   000CEE  6E21               	movwf	bcd2dec@value^0,c
   418   000CF0  6A22               	clrf	(bcd2dec@value+1)^0,c
   419   000CF2  EC16  F00A         	call	_bcd2dec	;wreg free
   420   000CF6  C021  F02B         	movff	?_bcd2dec,_main$908
   421   000CFA  C022  F02C         	movff	?_bcd2dec+1,_main$908+1
   422   000CFE                     
   423                           ;main.c: 33:         lcdData((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10) + 48);
   424   000CFE  0E00               	movlw	0
   425   000D00  6E16               	movwf	(___awdiv@divisor+1)^0,c
   426   000D02  0E0A               	movlw	10
   427   000D04  6E15               	movwf	___awdiv@divisor^0,c
   428   000D06  C02B  F013         	movff	_main$908,___awdiv@dividend
   429   000D0A  C02C  F014         	movff	_main$908+1,___awdiv@dividend+1
   430   000D0E  ECF4  F007         	call	___awdiv	;wreg free
   431   000D12  C013  F025         	movff	?___awdiv,___awmod@dividend
   432   000D16  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
   433   000D1A  0E00               	movlw	0
   434   000D1C  6E28               	movwf	(___awmod@divisor+1)^0,c
   435   000D1E  0E0A               	movlw	10
   436   000D20  6E27               	movwf	___awmod@divisor^0,c
   437   000D22  EC56  F008         	call	___awmod	;wreg free
   438   000D26  5025               	movf	?___awmod^0,w,c
   439   000D28  0F30               	addlw	48
   440   000D2A  EC32  F00B         	call	_lcdData
   441   000D2E                     
   442                           ;main.c: 34:         lcdData(((bcd2dec(dsReadData(2)& 0x5f)) % 10) + 48);
   443   000D2E  0E00               	movlw	0
   444   000D30  6E0F               	movwf	(dsReadData@address+1)^0,c
   445   000D32  0E02               	movlw	2
   446   000D34  6E0E               	movwf	dsReadData@address^0,c
   447   000D36  ECD0  F009         	call	_dsReadData	;wreg free
   448   000D3A  0E5F               	movlw	95
   449   000D3C  140E               	andwf	?_dsReadData^0,w,c
   450   000D3E  6E21               	movwf	bcd2dec@value^0,c
   451   000D40  6A22               	clrf	(bcd2dec@value+1)^0,c
   452   000D42  EC16  F00A         	call	_bcd2dec	;wreg free
   453   000D46  C021  F025         	movff	?_bcd2dec,___awmod@dividend
   454   000D4A  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
   455   000D4E  0E00               	movlw	0
   456   000D50  6E28               	movwf	(___awmod@divisor+1)^0,c
   457   000D52  0E0A               	movlw	10
   458   000D54  6E27               	movwf	___awmod@divisor^0,c
   459   000D56  EC56  F008         	call	___awmod	;wreg free
   460   000D5A  5025               	movf	?___awmod^0,w,c
   461   000D5C  0F30               	addlw	48
   462   000D5E  EC32  F00B         	call	_lcdData
   463   000D62                     
   464                           ;main.c: 35:         lcdData(':');
   465   000D62  0E3A               	movlw	58
   466   000D64  EC32  F00B         	call	_lcdData
   467   000D68                     
   468                           ;main.c: 36:         lcdData((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
   469   000D68  0E00               	movlw	0
   470   000D6A  6E0F               	movwf	(dsReadData@address+1)^0,c
   471   000D6C  0E01               	movlw	1
   472   000D6E  6E0E               	movwf	dsReadData@address^0,c
   473   000D70  ECD0  F009         	call	_dsReadData	;wreg free
   474   000D74  0E7F               	movlw	127
   475   000D76  140E               	andwf	?_dsReadData^0,w,c
   476   000D78  6E21               	movwf	bcd2dec@value^0,c
   477   000D7A  6A22               	clrf	(bcd2dec@value+1)^0,c
   478   000D7C  EC16  F00A         	call	_bcd2dec	;wreg free
   479   000D80  C021  F02B         	movff	?_bcd2dec,_main$908
   480   000D84  C022  F02C         	movff	?_bcd2dec+1,_main$908+1
   481   000D88                     
   482                           ;main.c: 36:         lcdData((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
   483   000D88  0E00               	movlw	0
   484   000D8A  6E16               	movwf	(___awdiv@divisor+1)^0,c
   485   000D8C  0E0A               	movlw	10
   486   000D8E  6E15               	movwf	___awdiv@divisor^0,c
   487   000D90  C02B  F013         	movff	_main$908,___awdiv@dividend
   488   000D94  C02C  F014         	movff	_main$908+1,___awdiv@dividend+1
   489   000D98  ECF4  F007         	call	___awdiv	;wreg free
   490   000D9C  C013  F025         	movff	?___awdiv,___awmod@dividend
   491   000DA0  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
   492   000DA4  0E00               	movlw	0
   493   000DA6  6E28               	movwf	(___awmod@divisor+1)^0,c
   494   000DA8  0E0A               	movlw	10
   495   000DAA  6E27               	movwf	___awmod@divisor^0,c
   496   000DAC  EC56  F008         	call	___awmod	;wreg free
   497   000DB0  5025               	movf	?___awmod^0,w,c
   498   000DB2  0F30               	addlw	48
   499   000DB4  EC32  F00B         	call	_lcdData
   500   000DB8                     
   501                           ;main.c: 37:         lcdData(((bcd2dec(dsReadData(1)& 0x7f)) % 10) + 48);
   502   000DB8  0E00               	movlw	0
   503   000DBA  6E0F               	movwf	(dsReadData@address+1)^0,c
   504   000DBC  0E01               	movlw	1
   505   000DBE  6E0E               	movwf	dsReadData@address^0,c
   506   000DC0  ECD0  F009         	call	_dsReadData	;wreg free
   507   000DC4  0E7F               	movlw	127
   508   000DC6  140E               	andwf	?_dsReadData^0,w,c
   509   000DC8  6E21               	movwf	bcd2dec@value^0,c
   510   000DCA  6A22               	clrf	(bcd2dec@value+1)^0,c
   511   000DCC  EC16  F00A         	call	_bcd2dec	;wreg free
   512   000DD0  C021  F025         	movff	?_bcd2dec,___awmod@dividend
   513   000DD4  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
   514   000DD8  0E00               	movlw	0
   515   000DDA  6E28               	movwf	(___awmod@divisor+1)^0,c
   516   000DDC  0E0A               	movlw	10
   517   000DDE  6E27               	movwf	___awmod@divisor^0,c
   518   000DE0  EC56  F008         	call	___awmod	;wreg free
   519   000DE4  5025               	movf	?___awmod^0,w,c
   520   000DE6  0F30               	addlw	48
   521   000DE8  EC32  F00B         	call	_lcdData
   522   000DEC                     
   523                           ;main.c: 38:         lcdData(':');
   524   000DEC  0E3A               	movlw	58
   525   000DEE  EC32  F00B         	call	_lcdData
   526   000DF2                     
   527                           ;main.c: 39:         lcdData((((bcd2dec(dsReadData(0)& 0x7f)) / 10) % 10) + 48);
   528   000DF2  0E00               	movlw	0
   529   000DF4  6E0F               	movwf	(dsReadData@address+1)^0,c
   530   000DF6  0E00               	movlw	0
   531   000DF8  6E0E               	movwf	dsReadData@address^0,c
   532   000DFA  ECD0  F009         	call	_dsReadData	;wreg free
   533   000DFE  0E7F               	movlw	127
   534   000E00  140E               	andwf	?_dsReadData^0,w,c
   535   000E02  6E21               	movwf	bcd2dec@value^0,c
   536   000E04  6A22               	clrf	(bcd2dec@value+1)^0,c
   537   000E06  EC16  F00A         	call	_bcd2dec	;wreg free
   538   000E0A  C021  F02B         	movff	?_bcd2dec,_main$908
   539   000E0E  C022  F02C         	movff	?_bcd2dec+1,_main$908+1
   540   000E12                     
   541                           ;main.c: 39:         lcdData((((bcd2dec(dsReadData(0)& 0x7f)) / 10) % 10) + 48);
   542   000E12  0E00               	movlw	0
   543   000E14  6E16               	movwf	(___awdiv@divisor+1)^0,c
   544   000E16  0E0A               	movlw	10
   545   000E18  6E15               	movwf	___awdiv@divisor^0,c
   546   000E1A  C02B  F013         	movff	_main$908,___awdiv@dividend
   547   000E1E  C02C  F014         	movff	_main$908+1,___awdiv@dividend+1
   548   000E22  ECF4  F007         	call	___awdiv	;wreg free
   549   000E26  C013  F025         	movff	?___awdiv,___awmod@dividend
   550   000E2A  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
   551   000E2E  0E00               	movlw	0
   552   000E30  6E28               	movwf	(___awmod@divisor+1)^0,c
   553   000E32  0E0A               	movlw	10
   554   000E34  6E27               	movwf	___awmod@divisor^0,c
   555   000E36  EC56  F008         	call	___awmod	;wreg free
   556   000E3A  5025               	movf	?___awmod^0,w,c
   557   000E3C  0F30               	addlw	48
   558   000E3E  EC32  F00B         	call	_lcdData
   559   000E42                     
   560                           ;main.c: 40:         lcdData(((bcd2dec(dsReadData(0)& 0x7f)) % 10) + 48);
   561   000E42  0E00               	movlw	0
   562   000E44  6E0F               	movwf	(dsReadData@address+1)^0,c
   563   000E46  0E00               	movlw	0
   564   000E48  6E0E               	movwf	dsReadData@address^0,c
   565   000E4A  ECD0  F009         	call	_dsReadData	;wreg free
   566   000E4E  0E7F               	movlw	127
   567   000E50  140E               	andwf	?_dsReadData^0,w,c
   568   000E52  6E21               	movwf	bcd2dec@value^0,c
   569   000E54  6A22               	clrf	(bcd2dec@value+1)^0,c
   570   000E56  EC16  F00A         	call	_bcd2dec	;wreg free
   571   000E5A  C021  F025         	movff	?_bcd2dec,___awmod@dividend
   572   000E5E  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
   573   000E62  0E00               	movlw	0
   574   000E64  6E28               	movwf	(___awmod@divisor+1)^0,c
   575   000E66  0E0A               	movlw	10
   576   000E68  6E27               	movwf	___awmod@divisor^0,c
   577   000E6A  EC56  F008         	call	___awmod	;wreg free
   578   000E6E  5025               	movf	?___awmod^0,w,c
   579   000E70  0F30               	addlw	48
   580   000E72  EC32  F00B         	call	_lcdData
   581                           
   582                           ;main.c: 42:     }
   583   000E76  EF6C  F006         	goto	l1970
   584   000E7A  EF01  F000         	goto	start
   585   000E7E                     __end_of_main:
   586                           	callstack 0
   587                           
   588 ;; *************** function _lcdInit *****************
   589 ;; Defined at:
   590 ;;		line 110 in file "lcd.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  i               1    3[COMRAM] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   604 ;;      Params:         0       0       0       0       0       0       0       0       0
   605 ;;      Locals:         1       0       0       0       0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0       0       0
   607 ;;      Totals:         1       0       0       0       0       0       0       0       0
   608 ;;Total ram usage:        1 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; Hardware stack levels required when called: 3
   611 ;; This function calls:
   612 ;;		_Delay2ms
   613 ;;		_lcdCommand
   614 ;;		_lcdCommand4bits
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text1
   621   00115C                     __ptext1:
   622                           	callstack 0
   623   00115C                     _lcdInit:
   624                           	callstack 27
   625   00115C                     
   626                           ;lcd.c: 111:     unsigned char i;;lcd.c: 113:     ((TRISD) &= ~(1<<(0)));
   627   00115C  9095               	bcf	149,0,c	;volatile
   628                           
   629                           ;lcd.c: 114:     ((TRISD) &= ~(1<<(7)));
   630   00115E  9E95               	bcf	149,7,c	;volatile
   631                           
   632                           ;lcd.c: 115:     ((TRISD) &= ~(1<<(6)));
   633   001160  9C95               	bcf	149,6,c	;volatile
   634                           
   635                           ;lcd.c: 116:     ((TRISD) &= ~(1<<(5)));
   636   001162  9A95               	bcf	149,5,c	;volatile
   637                           
   638                           ;lcd.c: 117:     ((TRISD) &= ~(1<<(4)));
   639   001164  9895               	bcf	149,4,c	;volatile
   640                           
   641                           ;lcd.c: 118:     ((TRISD) &= ~(1<<(2)));
   642   001166  9495               	bcf	149,2,c	;volatile
   643   001168                     
   644                           ;lcd.c: 121:     for (i = 0; i < 7; i++)
   645   001168  0E00               	movlw	0
   646   00116A  6E04               	movwf	lcdInit@i^0,c
   647   00116C                     l1900:
   648                           
   649                           ;lcd.c: 122:         Delay2ms();
   650   00116C  EC88  F00A         	call	_Delay2ms	;wreg free
   651   001170  2A04               	incf	lcdInit@i^0,f,c
   652   001172  0E06               	movlw	6
   653   001174  6404               	cpfsgt	lcdInit@i^0,c
   654   001176  EFBF  F008         	goto	u1811
   655   00117A  EFC1  F008         	goto	u1810
   656   00117E                     u1811:
   657   00117E  EFB6  F008         	goto	l1900
   658   001182                     u1810:
   659   001182                     
   660                           ;lcd.c: 125:     lcdCommand4bits(0x30, 0);
   661   001182  0E00               	movlw	0
   662   001184  6E01               	movwf	lcdCommand4bits@data^0,c
   663   001186  0E30               	movlw	48
   664   001188  ECEA  F008         	call	_lcdCommand4bits
   665                           
   666                           ;lcd.c: 126:     Delay2ms();
   667   00118C  EC88  F00A         	call	_Delay2ms	;wreg free
   668                           
   669                           ;lcd.c: 128:     lcdCommand4bits(0x30, 0);
   670   001190  0E00               	movlw	0
   671   001192  6E01               	movwf	lcdCommand4bits@data^0,c
   672   001194  0E30               	movlw	48
   673   001196  ECEA  F008         	call	_lcdCommand4bits
   674                           
   675                           ;lcd.c: 129:     Delay2ms();
   676   00119A  EC88  F00A         	call	_Delay2ms	;wreg free
   677                           
   678                           ;lcd.c: 131:     lcdCommand4bits(0x30, 0);
   679   00119E  0E00               	movlw	0
   680   0011A0  6E01               	movwf	lcdCommand4bits@data^0,c
   681   0011A2  0E30               	movlw	48
   682   0011A4  ECEA  F008         	call	_lcdCommand4bits
   683                           
   684                           ;lcd.c: 132:     Delay2ms();
   685   0011A8  EC88  F00A         	call	_Delay2ms	;wreg free
   686                           
   687                           ;lcd.c: 134:     lcdCommand4bits(0x20, 0);
   688   0011AC  0E00               	movlw	0
   689   0011AE  6E01               	movwf	lcdCommand4bits@data^0,c
   690   0011B0  0E20               	movlw	32
   691   0011B2  ECEA  F008         	call	_lcdCommand4bits
   692                           
   693                           ;lcd.c: 135:     Delay2ms();
   694   0011B6  EC88  F00A         	call	_Delay2ms	;wreg free
   695                           
   696                           ;lcd.c: 137:     lcdCommand(0x28);
   697   0011BA  0E28               	movlw	40
   698   0011BC  ECAC  F009         	call	_lcdCommand
   699                           
   700                           ;lcd.c: 138:     lcdCommand(0x06);
   701   0011C0  0E06               	movlw	6
   702   0011C2  ECAC  F009         	call	_lcdCommand
   703                           
   704                           ;lcd.c: 140:     lcdCommand(0x0C);
   705   0011C6  0E0C               	movlw	12
   706   0011C8  ECAC  F009         	call	_lcdCommand
   707                           
   708                           ;lcd.c: 141:     lcdCommand(0x01);
   709   0011CC  0E01               	movlw	1
   710   0011CE  ECAC  F009         	call	_lcdCommand
   711   0011D2  0012               	return		;funcret
   712   0011D4                     __end_of_lcdInit:
   713                           	callstack 0
   714                           
   715 ;; *************** function _lcdCommand *****************
   716 ;; Defined at:
   717 ;;		line 89 in file "lcd.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  cmd             1    wreg     unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  cmd             1    2[COMRAM] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   731 ;;      Params:         0       0       0       0       0       0       0       0       0
   732 ;;      Locals:         1       0       0       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0
   734 ;;      Totals:         1       0       0       0       0       0       0       0       0
   735 ;;Total ram usage:        1 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 2
   738 ;; This function calls:
   739 ;;		_Delay2ms
   740 ;;		_Delay40us
   741 ;;		_lcdCommand4bits
   742 ;; This function is called by:
   743 ;;		_main
   744 ;;		_lcdInit
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text2
   749   001358                     __ptext2:
   750                           	callstack 0
   751   001358                     _lcdCommand:
   752                           	callstack 27
   753                           
   754                           ;incstack = 0
   755                           ;lcdCommand@cmd stored from wreg
   756   001358  6E03               	movwf	lcdCommand@cmd^0,c
   757   00135A                     
   758                           ;lcd.c: 91:     lcdCommand4bits(cmd, 0);
   759   00135A  0E00               	movlw	0
   760   00135C  6E01               	movwf	lcdCommand4bits@data^0,c
   761   00135E  5003               	movf	lcdCommand@cmd^0,w,c
   762   001360  ECEA  F008         	call	_lcdCommand4bits
   763                           
   764                           ;lcd.c: 92:     lcdCommand4bits(cmd << 4, 0);
   765   001364  0E00               	movlw	0
   766   001366  6E01               	movwf	lcdCommand4bits@data^0,c
   767   001368  3803               	swapf	lcdCommand@cmd^0,w,c
   768   00136A  0BF0               	andlw	240
   769   00136C  ECEA  F008         	call	_lcdCommand4bits
   770   001370                     
   771                           ;lcd.c: 95:     if ((cmd == 0x02) || (cmd == 0x01)) {
   772   001370  0E02               	movlw	2
   773   001372  1803               	xorwf	lcdCommand@cmd^0,w,c
   774   001374  B4D8               	btfsc	status,2,c
   775   001376  EFBF  F009         	goto	u1731
   776   00137A  EFC1  F009         	goto	u1730
   777   00137E                     u1731:
   778   00137E  EFC9  F009         	goto	l1830
   779   001382                     u1730:
   780   001382  0403               	decf	lcdCommand@cmd^0,w,c
   781   001384  A4D8               	btfss	status,2,c
   782   001386  EFC7  F009         	goto	u1741
   783   00138A  EFC9  F009         	goto	u1740
   784   00138E                     u1741:
   785   00138E  EFCD  F009         	goto	l1832
   786   001392                     u1740:
   787   001392                     l1830:
   788                           
   789                           ;lcd.c: 96:         Delay2ms();
   790   001392  EC88  F00A         	call	_Delay2ms	;wreg free
   791                           
   792                           ;lcd.c: 97:     } else {
   793   001396  EFCF  F009         	goto	l96
   794   00139A                     l1832:
   795                           
   796                           ;lcd.c: 98:         Delay40us();
   797   00139A  EC41  F00B         	call	_Delay40us	;wreg free
   798   00139E                     l96:
   799   00139E  0012               	return		;funcret
   800   0013A0                     __end_of_lcdCommand:
   801                           	callstack 0
   802                           
   803 ;; *************** function _Delay2ms *****************
   804 ;; Defined at:
   805 ;;		line 40 in file "lcd.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  k               1    1[COMRAM] unsigned char 
   810 ;;  j               1    0[COMRAM] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   820 ;;      Params:         0       0       0       0       0       0       0       0       0
   821 ;;      Locals:         2       0       0       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0       0       0
   823 ;;      Totals:         2       0       0       0       0       0       0       0       0
   824 ;;Total ram usage:        2 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_lcdCommand
   830 ;;		_lcdInit
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text3
   835   001510                     __ptext3:
   836                           	callstack 0
   837   001510                     _Delay2ms:
   838                           	callstack 28
   839   001510                     
   840                           ;lcd.c: 41:     unsigned char j, k;;lcd.c: 42:     for (j = 0; j < 20; j++)
   841   001510  0E00               	movlw	0
   842   001512  6E01               	movwf	Delay2ms@j^0,c
   843   001514                     l1728:
   844                           
   845                           ;lcd.c: 43:         for (k = 0; k < 178; k++);
   846   001514  0E00               	movlw	0
   847   001516  6E02               	movwf	Delay2ms@k^0,c
   848   001518                     l1734:
   849   001518  2A02               	incf	Delay2ms@k^0,f,c
   850   00151A  0EB1               	movlw	177
   851   00151C  6402               	cpfsgt	Delay2ms@k^0,c
   852   00151E  EF93  F00A         	goto	u1591
   853   001522  EF95  F00A         	goto	u1590
   854   001526                     u1591:
   855   001526  EF8C  F00A         	goto	l1734
   856   00152A                     u1590:
   857   00152A  2A01               	incf	Delay2ms@j^0,f,c
   858   00152C  0E13               	movlw	19
   859   00152E  6401               	cpfsgt	Delay2ms@j^0,c
   860   001530  EF9C  F00A         	goto	u1601
   861   001534  EF9E  F00A         	goto	u1600
   862   001538                     u1601:
   863   001538  EF8A  F00A         	goto	l1728
   864   00153C                     u1600:
   865   00153C  0012               	return		;funcret
   866   00153E                     __end_of_Delay2ms:
   867                           	callstack 0
   868                           
   869 ;; *************** function _lcdData *****************
   870 ;; Defined at:
   871 ;;		line 102 in file "lcd.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  valor           1    wreg     unsigned char 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  valor           1    2[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   885 ;;      Params:         0       0       0       0       0       0       0       0       0
   886 ;;      Locals:         1       0       0       0       0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0
   888 ;;      Totals:         1       0       0       0       0       0       0       0       0
   889 ;;Total ram usage:        1 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 2
   892 ;; This function calls:
   893 ;;		_Delay40us
   894 ;;		_lcdCommand4bits
   895 ;; This function is called by:
   896 ;;		_main
   897 ;;		_lcd_write_string
   898 ;;		_lcdInt
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text4
   903   001664                     __ptext4:
   904                           	callstack 0
   905   001664                     _lcdData:
   906                           	callstack 28
   907                           
   908                           ;incstack = 0
   909                           ;lcdData@valor stored from wreg
   910   001664  6E03               	movwf	lcdData@valor^0,c
   911   001666                     
   912                           ;lcd.c: 103:     lcdCommand4bits(valor, 1);
   913   001666  0E01               	movlw	1
   914   001668  6E01               	movwf	lcdCommand4bits@data^0,c
   915   00166A  5003               	movf	lcdData@valor^0,w,c
   916   00166C  ECEA  F008         	call	_lcdCommand4bits
   917                           
   918                           ;lcd.c: 104:     lcdCommand4bits(valor << 4, 1);
   919   001670  0E01               	movlw	1
   920   001672  6E01               	movwf	lcdCommand4bits@data^0,c
   921   001674  3803               	swapf	lcdData@valor^0,w,c
   922   001676  0BF0               	andlw	240
   923   001678  ECEA  F008         	call	_lcdCommand4bits
   924                           
   925                           ;lcd.c: 107:     Delay40us();
   926   00167C  EC41  F00B         	call	_Delay40us	;wreg free
   927   001680  0012               	return		;funcret
   928   001682                     __end_of_lcdData:
   929                           	callstack 0
   930                           
   931 ;; *************** function _lcdCommand4bits *****************
   932 ;; Defined at:
   933 ;;		line 51 in file "lcd.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  cmd             1    wreg     unsigned char 
   936 ;;  data            1    0[COMRAM] unsigned char 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  cmd             1    1[COMRAM] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   948 ;;      Params:         1       0       0       0       0       0       0       0       0
   949 ;;      Locals:         1       0       0       0       0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0       0       0
   951 ;;      Totals:         2       0       0       0       0       0       0       0       0
   952 ;;Total ram usage:        2 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; Hardware stack levels required when called: 1
   955 ;; This function calls:
   956 ;;		_pulseEnable
   957 ;; This function is called by:
   958 ;;		_lcdCommand
   959 ;;		_lcdData
   960 ;;		_lcdInit
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text5
   965   0011D4                     __ptext5:
   966                           	callstack 0
   967   0011D4                     _lcdCommand4bits:
   968                           	callstack 28
   969                           
   970                           ;incstack = 0
   971                           ;lcdCommand4bits@cmd stored from wreg
   972   0011D4  6E02               	movwf	lcdCommand4bits@cmd^0,c
   973   0011D6                     
   974                           ;lcd.c: 53:     if (data) {
   975   0011D6  5001               	movf	lcdCommand4bits@data^0,w,c
   976   0011D8  B4D8               	btfsc	status,2,c
   977   0011DA  EFF1  F008         	goto	u1611
   978   0011DE  EFF3  F008         	goto	u1610
   979   0011E2                     u1611:
   980   0011E2  EFF6  F008         	goto	l1746
   981   0011E6                     u1610:
   982   0011E6                     
   983                           ;lcd.c: 54:         ((PORTD) |= (1<<(0)));
   984   0011E6  8083               	bsf	131,0,c	;volatile
   985                           
   986                           ;lcd.c: 55:     } else {
   987   0011E8  EFF7  F008         	goto	l1748
   988   0011EC                     l1746:
   989                           
   990                           ;lcd.c: 56:         ((PORTD) &= ~(1<<(0)));
   991   0011EC  9083               	bcf	131,0,c	;volatile
   992   0011EE                     l1748:
   993                           
   994                           ;lcd.c: 59:     if (((cmd) & (1<<(7)))) {
   995   0011EE  AE02               	btfss	lcdCommand4bits@cmd^0,7,c
   996   0011F0  EFFC  F008         	goto	u1621
   997   0011F4  EFFE  F008         	goto	u1620
   998   0011F8                     u1621:
   999   0011F8  EF01  F009         	goto	l1752
  1000   0011FC                     u1620:
  1001   0011FC                     
  1002                           ;lcd.c: 60:         ((PORTD) |= (1<<(2)));
  1003   0011FC  8483               	bsf	131,2,c	;volatile
  1004                           
  1005                           ;lcd.c: 61:     } else {
  1006   0011FE  EF02  F009         	goto	l1754
  1007   001202                     l1752:
  1008                           
  1009                           ;lcd.c: 62:         ((PORTD) &= ~(1<<(2)));
  1010   001202  9483               	bcf	131,2,c	;volatile
  1011   001204                     l1754:
  1012                           
  1013                           ;lcd.c: 66:     if (((cmd) & (1<<(6)))) {
  1014   001204  AC02               	btfss	lcdCommand4bits@cmd^0,6,c
  1015   001206  EF07  F009         	goto	u1631
  1016   00120A  EF09  F009         	goto	u1630
  1017   00120E                     u1631:
  1018   00120E  EF0C  F009         	goto	l1758
  1019   001212                     u1630:
  1020   001212                     
  1021                           ;lcd.c: 67:         ((PORTD) |= (1<<(4)));
  1022   001212  8883               	bsf	131,4,c	;volatile
  1023                           
  1024                           ;lcd.c: 68:     } else {
  1025   001214  EF0D  F009         	goto	l1760
  1026   001218                     l1758:
  1027                           
  1028                           ;lcd.c: 69:         ((PORTD) &= ~(1<<(4)));
  1029   001218  9883               	bcf	131,4,c	;volatile
  1030   00121A                     l1760:
  1031                           
  1032                           ;lcd.c: 73:     if (((cmd) & (1<<(5)))) {
  1033   00121A  AA02               	btfss	lcdCommand4bits@cmd^0,5,c
  1034   00121C  EF12  F009         	goto	u1641
  1035   001220  EF14  F009         	goto	u1640
  1036   001224                     u1641:
  1037   001224  EF17  F009         	goto	l1764
  1038   001228                     u1640:
  1039   001228                     
  1040                           ;lcd.c: 74:         ((PORTD) |= (1<<(5)));
  1041   001228  8A83               	bsf	131,5,c	;volatile
  1042                           
  1043                           ;lcd.c: 75:     } else {
  1044   00122A  EF18  F009         	goto	l1766
  1045   00122E                     l1764:
  1046                           
  1047                           ;lcd.c: 76:         ((PORTD) &= ~(1<<(5)));
  1048   00122E  9A83               	bcf	131,5,c	;volatile
  1049   001230                     l1766:
  1050                           
  1051                           ;lcd.c: 80:     if (((cmd) & (1<<(4)))) {
  1052   001230  A802               	btfss	lcdCommand4bits@cmd^0,4,c
  1053   001232  EF1D  F009         	goto	u1651
  1054   001236  EF1F  F009         	goto	u1650
  1055   00123A                     u1651:
  1056   00123A  EF22  F009         	goto	l1770
  1057   00123E                     u1650:
  1058   00123E                     
  1059                           ;lcd.c: 81:         ((PORTD) |= (1<<(6)));
  1060   00123E  8C83               	bsf	131,6,c	;volatile
  1061                           
  1062                           ;lcd.c: 82:     } else {
  1063   001240  EF23  F009         	goto	l1772
  1064   001244                     l1770:
  1065                           
  1066                           ;lcd.c: 83:         ((PORTD) &= ~(1<<(6)));
  1067   001244  9C83               	bcf	131,6,c	;volatile
  1068   001246                     l1772:
  1069                           
  1070                           ;lcd.c: 86:     pulseEnable();
  1071   001246  EC51  F00B         	call	_pulseEnable	;wreg free
  1072   00124A  0012               	return		;funcret
  1073   00124C                     __end_of_lcdCommand4bits:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _pulseEnable *****************
  1077 ;; Defined at:
  1078 ;;		line 46 in file "lcd.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		status,2, status,0
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_lcdCommand4bits
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text6
  1106   0016A2                     __ptext6:
  1107                           	callstack 0
  1108   0016A2                     _pulseEnable:
  1109                           	callstack 28
  1110   0016A2                     
  1111                           ;lcd.c: 47:     ((PORTD) |= (1<<(7)));
  1112   0016A2  8E83               	bsf	131,7,c	;volatile
  1113                           
  1114                           ;lcd.c: 48:     ((PORTD) &= ~(1<<(7)));
  1115   0016A4  9E83               	bcf	131,7,c	;volatile
  1116   0016A6  0012               	return		;funcret
  1117   0016A8                     __end_of_pulseEnable:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _Delay40us *****************
  1121 ;; Defined at:
  1122 ;;		line 35 in file "lcd.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  j               1    0[COMRAM] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1136 ;;      Params:         0       0       0       0       0       0       0       0       0
  1137 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1139 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1140 ;;Total ram usage:        1 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_lcdCommand
  1146 ;;		_lcdData
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text7
  1151   001682                     __ptext7:
  1152                           	callstack 0
  1153   001682                     _Delay40us:
  1154                           	callstack 28
  1155   001682                     
  1156                           ;lcd.c: 36:     unsigned char j;;lcd.c: 37:     for (j = 0; j < 68; j++);
  1157   001682  0E00               	movlw	0
  1158   001684  6E01               	movwf	Delay40us@j^0,c
  1159   001686                     l1718:
  1160   001686  2A01               	incf	Delay40us@j^0,f,c
  1161   001688  0E43               	movlw	67
  1162   00168A  6401               	cpfsgt	Delay40us@j^0,c
  1163   00168C  EF4A  F00B         	goto	u1581
  1164   001690  EF4C  F00B         	goto	u1580
  1165   001694                     u1581:
  1166   001694  EF43  F00B         	goto	l1718
  1167   001698                     u1580:
  1168   001698  0012               	return		;funcret
  1169   00169A                     __end_of_Delay40us:
  1170                           	callstack 0
  1171                           
  1172 ;; *************** function _dsStartClock *****************
  1173 ;; Defined at:
  1174 ;;		line 20 in file "ds1307.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  seconds         2   18[COMRAM] int 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1188 ;;      Params:         0       0       0       0       0       0       0       0       0
  1189 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1191 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1192 ;;Total ram usage:        2 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 5
  1195 ;; This function calls:
  1196 ;;		_dsReadData
  1197 ;;		_dsWriteData
  1198 ;; This function is called by:
  1199 ;;		_main
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text8
  1204   001618                     __ptext8:
  1205                           	callstack 0
  1206   001618                     _dsStartClock:
  1207                           	callstack 25
  1208   001618                     
  1209                           ;ds1307.c: 21:  int seconds;;ds1307.c: 22:  seconds = dsReadData(0);
  1210   001618  0E00               	movlw	0
  1211   00161A  6E0F               	movwf	(dsReadData@address+1)^0,c
  1212   00161C  0E00               	movlw	0
  1213   00161E  6E0E               	movwf	dsReadData@address^0,c
  1214   001620  ECD0  F009         	call	_dsReadData	;wreg free
  1215   001624  C00E  F013         	movff	?_dsReadData,dsStartClock@seconds
  1216   001628  C00F  F014         	movff	?_dsReadData+1,dsStartClock@seconds+1
  1217                           
  1218                           ;ds1307.c: 23:  dsWriteData(0x80 | seconds,0);
  1219   00162C  0E00               	movlw	0
  1220   00162E  6E0D               	movwf	(dsWriteData@address+1)^0,c
  1221   001630  0E00               	movlw	0
  1222   001632  6E0C               	movwf	dsWriteData@address^0,c
  1223   001634  5013               	movf	dsStartClock@seconds^0,w,c
  1224   001636  0980               	iorlw	128
  1225   001638  EC9F  F00A         	call	_dsWriteData
  1226   00163C  0012               	return		;funcret
  1227   00163E                     __end_of_dsStartClock:
  1228                           	callstack 0
  1229                           
  1230 ;; *************** function _dsWriteData *****************
  1231 ;; Defined at:
  1232 ;;		line 26 in file "ds1307.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  value           1    wreg     unsigned char 
  1235 ;;  address         2   11[COMRAM] int 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  value           1   13[COMRAM] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1247 ;;      Params:         2       0       0       0       0       0       0       0       0
  1248 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1250 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1251 ;;Total ram usage:        3 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; Hardware stack levels required when called: 4
  1254 ;; This function calls:
  1255 ;;		_i2cWriteByte
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;;		_dsStartClock
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text9
  1263   00153E                     __ptext9:
  1264                           	callstack 0
  1265   00153E                     _dsWriteData:
  1266                           	callstack 26
  1267                           
  1268                           ;incstack = 0
  1269                           ;dsWriteData@value stored from wreg
  1270   00153E  6E0E               	movwf	dsWriteData@value^0,c
  1271   001540                     
  1272                           ;ds1307.c: 27:  i2cWriteByte(1,0, (0x6f<<1)|0);
  1273   001540  0E00               	movlw	0
  1274   001542  6E08               	movwf	i2cWriteByte@send_stop^0,c
  1275   001544  0EDE               	movlw	222
  1276   001546  6E09               	movwf	i2cWriteByte@byte^0,c
  1277   001548  0E01               	movlw	1
  1278   00154A  EC26  F009         	call	_i2cWriteByte
  1279                           
  1280                           ;ds1307.c: 28:  i2cWriteByte(0,0,address);
  1281   00154E  0E00               	movlw	0
  1282   001550  6E08               	movwf	i2cWriteByte@send_stop^0,c
  1283   001552  C00C  F009         	movff	dsWriteData@address,i2cWriteByte@byte
  1284   001556  0E00               	movlw	0
  1285   001558  EC26  F009         	call	_i2cWriteByte
  1286                           
  1287                           ;ds1307.c: 29:  i2cWriteByte(0,1,value);
  1288   00155C  0E01               	movlw	1
  1289   00155E  6E08               	movwf	i2cWriteByte@send_stop^0,c
  1290   001560  C00E  F009         	movff	dsWriteData@value,i2cWriteByte@byte
  1291   001564  0E00               	movlw	0
  1292   001566  EC26  F009         	call	_i2cWriteByte
  1293   00156A  0012               	return		;funcret
  1294   00156C                     __end_of_dsWriteData:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _dsReadData *****************
  1298 ;; Defined at:
  1299 ;;		line 31 in file "ds1307.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  address         2   13[COMRAM] int 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  result          2   16[COMRAM] int 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  2   13[COMRAM] int 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1313 ;;      Params:         2       0       0       0       0       0       0       0       0
  1314 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1315 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1316 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1317 ;;Total ram usage:        5 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; Hardware stack levels required when called: 4
  1320 ;; This function calls:
  1321 ;;		_i2cReadByte
  1322 ;;		_i2cWriteByte
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;;		_dsStartClock
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text10
  1330   0013A0                     __ptext10:
  1331                           	callstack 0
  1332   0013A0                     _dsReadData:
  1333                           	callstack 25
  1334   0013A0                     
  1335                           ;ds1307.c: 32:  int result;;ds1307.c: 33:  i2cWriteByte(1,0,(0x6f<<1) | 0);
  1336   0013A0  0E00               	movlw	0
  1337   0013A2  6E08               	movwf	i2cWriteByte@send_stop^0,c
  1338   0013A4  0EDE               	movlw	222
  1339   0013A6  6E09               	movwf	i2cWriteByte@byte^0,c
  1340   0013A8  0E01               	movlw	1
  1341   0013AA  EC26  F009         	call	_i2cWriteByte
  1342                           
  1343                           ;ds1307.c: 34:  i2cWriteByte(0,0,address);
  1344   0013AE  0E00               	movlw	0
  1345   0013B0  6E08               	movwf	i2cWriteByte@send_stop^0,c
  1346   0013B2  C00E  F009         	movff	dsReadData@address,i2cWriteByte@byte
  1347   0013B6  0E00               	movlw	0
  1348   0013B8  EC26  F009         	call	_i2cWriteByte
  1349                           
  1350                           ;ds1307.c: 35:  i2cWriteByte(1,0, (0x6f<<1) | 1);
  1351   0013BC  0E00               	movlw	0
  1352   0013BE  6E08               	movwf	i2cWriteByte@send_stop^0,c
  1353   0013C0  0EDF               	movlw	223
  1354   0013C2  6E09               	movwf	i2cWriteByte@byte^0,c
  1355   0013C4  0E01               	movlw	1
  1356   0013C6  EC26  F009         	call	_i2cWriteByte
  1357                           
  1358                           ;ds1307.c: 36:  result = i2cReadByte(1,1 );
  1359   0013CA  0E01               	movlw	1
  1360   0013CC  6E08               	movwf	i2cReadByte@send_stop^0,c
  1361   0013CE  0E01               	movlw	1
  1362   0013D0  EC82  F009         	call	_i2cReadByte
  1363   0013D4  6E10               	movwf	??_dsReadData^0,c
  1364   0013D6  5010               	movf	??_dsReadData^0,w,c
  1365   0013D8  6E11               	movwf	dsReadData@result^0,c
  1366   0013DA  6A12               	clrf	(dsReadData@result+1)^0,c
  1367   0013DC                     
  1368                           ;ds1307.c: 37:  return result;
  1369   0013DC  C011  F00E         	movff	dsReadData@result,?_dsReadData
  1370   0013E0  C012  F00F         	movff	dsReadData@result+1,?_dsReadData+1
  1371   0013E4  0012               	return		;funcret
  1372   0013E6                     __end_of_dsReadData:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _i2cWriteByte *****************
  1376 ;; Defined at:
  1377 ;;		line 113 in file "i2c.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  send_start      1    wreg     unsigned char 
  1380 ;;  send_stop       1    7[COMRAM] unsigned char 
  1381 ;;  byte            1    8[COMRAM] unsigned char 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  send_start      1    9[COMRAM] unsigned char 
  1384 ;;  bit             1   10[COMRAM] unsigned char 
  1385 ;;  nack            1    0        unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      unsigned char 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         2       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        4 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 3
  1402 ;; This function calls:
  1403 ;;		_i2c_read_bit
  1404 ;;		_i2c_start
  1405 ;;		_i2c_stop
  1406 ;;		_i2c_write_bit
  1407 ;; This function is called by:
  1408 ;;		_dsWriteData
  1409 ;;		_dsReadData
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text11
  1414   00124C                     __ptext11:
  1415                           	callstack 0
  1416   00124C                     _i2cWriteByte:
  1417                           	callstack 26
  1418                           
  1419                           ;incstack = 0
  1420                           ;i2cWriteByte@send_start stored from wreg
  1421   00124C  6E0A               	movwf	i2cWriteByte@send_start^0,c
  1422   00124E                     
  1423                           ;i2c.c: 114:  unsigned char bit;;i2c.c: 115:  unsigned char nack;;i2c.c: 116:  if (send_
      +                          start) {
  1424   00124E  500A               	movf	i2cWriteByte@send_start^0,w,c
  1425   001250  B4D8               	btfsc	status,2,c
  1426   001252  EF2D  F009         	goto	u1661
  1427   001256  EF2F  F009         	goto	u1660
  1428   00125A                     u1661:
  1429   00125A  EF31  F009         	goto	l1778
  1430   00125E                     u1660:
  1431   00125E                     
  1432                           ;i2c.c: 117:   i2c_start();
  1433   00125E  ECF3  F009         	call	_i2c_start	;wreg free
  1434   001262                     l1778:
  1435                           
  1436                           ;i2c.c: 119:  for (bit = 0; bit < 8; bit++) {
  1437   001262  0E00               	movlw	0
  1438   001264  6E0B               	movwf	i2cWriteByte@bit^0,c
  1439   001266                     l1784:
  1440                           
  1441                           ;i2c.c: 120:   i2c_write_bit((byte & 0x80) != 0);
  1442   001266  BE09               	btfsc	i2cWriteByte@byte^0,7,c
  1443   001268  EF38  F009         	goto	u1671
  1444   00126C  EF3B  F009         	goto	u1670
  1445   001270                     u1671:
  1446   001270  0E01               	movlw	1
  1447   001272  EF3C  F009         	goto	u1680
  1448   001276                     u1670:
  1449   001276  0E00               	movlw	0
  1450   001278                     u1680:
  1451   001278  EC56  F009         	call	_i2c_write_bit
  1452   00127C                     
  1453                           ;i2c.c: 121:   byte <<= 1;
  1454   00127C  90D8               	bcf	status,0,c
  1455   00127E  3609               	rlcf	i2cWriteByte@byte^0,f,c
  1456   001280                     
  1457                           ;i2c.c: 122:  }
  1458   001280  2A0B               	incf	i2cWriteByte@bit^0,f,c
  1459   001282  0E07               	movlw	7
  1460   001284  640B               	cpfsgt	i2cWriteByte@bit^0,c
  1461   001286  EF47  F009         	goto	u1691
  1462   00128A  EF49  F009         	goto	u1690
  1463   00128E                     u1691:
  1464   00128E  EF33  F009         	goto	l1784
  1465   001292                     u1690:
  1466   001292  EC6F  F00A         	call	_i2c_read_bit	;wreg free
  1467   001296                     
  1468                           ;i2c.c: 124:  if (send_stop) {
  1469   001296  5008               	movf	i2cWriteByte@send_stop^0,w,c
  1470   001298  B4D8               	btfsc	status,2,c
  1471   00129A  EF51  F009         	goto	u1701
  1472   00129E  EF53  F009         	goto	u1700
  1473   0012A2                     u1701:
  1474   0012A2  EF55  F009         	goto	l214
  1475   0012A6                     u1700:
  1476   0012A6                     
  1477                           ;i2c.c: 125:   i2c_stop();
  1478   0012A6  ECB6  F00A         	call	_i2c_stop	;wreg free
  1479   0012AA                     l214:
  1480   0012AA  0012               	return		;funcret
  1481   0012AC                     __end_of_i2cWriteByte:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _i2c_start *****************
  1485 ;; Defined at:
  1486 ;;		line 52 in file "i2c.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 2
  1507 ;; This function calls:
  1508 ;;		_I2C_delay
  1509 ;;		_clear_SCL
  1510 ;;		_clear_SDA
  1511 ;;		_read_SCL
  1512 ;;		_read_SDA
  1513 ;; This function is called by:
  1514 ;;		_i2cWriteByte
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text12
  1519   0013E6                     __ptext12:
  1520                           	callstack 0
  1521   0013E6                     _i2c_start:
  1522                           	callstack 26
  1523   0013E6                     
  1524                           ;i2c.c: 54:  if (started) {
  1525   0013E6  502D               	movf	_started^0,w,c
  1526   0013E8  B4D8               	btfsc	status,2,c
  1527   0013EA  EFF9  F009         	goto	u1511
  1528   0013EE  EFFB  F009         	goto	u1510
  1529   0013F2                     u1511:
  1530   0013F2  EF0B  F00A         	goto	l1652
  1531   0013F6                     u1510:
  1532   0013F6                     
  1533                           ;i2c.c: 55:   read_SDA();
  1534   0013F6  EC37  F00A         	call	_read_SDA	;wreg free
  1535   0013FA                     
  1536                           ;i2c.c: 56:   I2C_delay();
  1537   0013FA  EC57  F00B         	call	_I2C_delay	;wreg free
  1538   0013FE                     l1648:
  1539   0013FE  EC53  F00A         	call	_read_SCL	;wreg free
  1540   001402  0900               	iorlw	0
  1541   001404  B4D8               	btfsc	status,2,c
  1542   001406  EF07  F00A         	goto	u1521
  1543   00140A  EF09  F00A         	goto	u1520
  1544   00140E                     u1521:
  1545   00140E  EFFF  F009         	goto	l1648
  1546   001412                     u1520:
  1547   001412                     
  1548                           ;i2c.c: 59:   I2C_delay();
  1549   001412  EC57  F00B         	call	_I2C_delay	;wreg free
  1550   001416                     l1652:
  1551                           
  1552                           ;i2c.c: 61:  if (read_SDA() == 0) {
  1553   001416  EC37  F00A         	call	_read_SDA	;wreg free
  1554   00141A                     
  1555                           ;i2c.c: 65:  clear_SDA();
  1556   00141A  ECCD  F00A         	call	_clear_SDA	;wreg free
  1557   00141E                     
  1558                           ;i2c.c: 66:  I2C_delay();
  1559   00141E  EC57  F00B         	call	_I2C_delay	;wreg free
  1560   001422                     
  1561                           ;i2c.c: 67:  clear_SCL();
  1562   001422  ECE2  F00A         	call	_clear_SCL	;wreg free
  1563   001426                     
  1564                           ;i2c.c: 68:  started = 1;
  1565   001426  0E01               	movlw	1
  1566   001428  6E2D               	movwf	_started^0,c
  1567   00142A  0012               	return		;funcret
  1568   00142C                     __end_of_i2c_start:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function _i2cReadByte *****************
  1572 ;; Defined at:
  1573 ;;		line 131 in file "i2c.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  nack            1    wreg     unsigned char 
  1576 ;;  send_stop       1    7[COMRAM] unsigned char 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  nack            1    9[COMRAM] unsigned char 
  1579 ;;  bit             2   10[COMRAM] unsigned int 
  1580 ;;  byte            1   12[COMRAM] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      unsigned char 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1590 ;;      Params:         1       0       0       0       0       0       0       0       0
  1591 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1592 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1593 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1594 ;;Total ram usage:        6 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 3
  1597 ;; This function calls:
  1598 ;;		_i2c_read_bit
  1599 ;;		_i2c_stop
  1600 ;;		_i2c_write_bit
  1601 ;; This function is called by:
  1602 ;;		_dsReadData
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text13
  1607   001304                     __ptext13:
  1608                           	callstack 0
  1609   001304                     _i2cReadByte:
  1610                           	callstack 25
  1611                           
  1612                           ;incstack = 0
  1613                           ;i2cReadByte@nack stored from wreg
  1614   001304  6E0A               	movwf	i2cReadByte@nack^0,c
  1615   001306                     
  1616                           ;i2c.c: 132:  unsigned char byte = 0;
  1617   001306  0E00               	movlw	0
  1618   001308  6E0D               	movwf	i2cReadByte@byte^0,c
  1619                           
  1620                           ;i2c.c: 133:  unsigned bit;;i2c.c: 134:  for (bit = 0; bit < 8; bit++) {
  1621   00130A  0E00               	movlw	0
  1622   00130C  6E0C               	movwf	(i2cReadByte@bit+1)^0,c
  1623   00130E  0E00               	movlw	0
  1624   001310  6E0B               	movwf	i2cReadByte@bit^0,c
  1625   001312                     l1806:
  1626                           
  1627                           ;i2c.c: 135:   byte = (byte << 1) | i2c_read_bit();
  1628   001312  EC6F  F00A         	call	_i2c_read_bit	;wreg free
  1629   001316  6E09               	movwf	??_i2cReadByte^0,c
  1630   001318  500D               	movf	i2cReadByte@byte^0,w,c
  1631   00131A  240D               	addwf	i2cReadByte@byte^0,w,c
  1632   00131C  1009               	iorwf	??_i2cReadByte^0,w,c
  1633   00131E  6E0D               	movwf	i2cReadByte@byte^0,c
  1634   001320                     
  1635                           ;i2c.c: 136:  }
  1636   001320  4A0B               	infsnz	i2cReadByte@bit^0,f,c
  1637   001322  2A0C               	incf	(i2cReadByte@bit+1)^0,f,c
  1638   001324  500C               	movf	(i2cReadByte@bit+1)^0,w,c
  1639   001326  E109               	bnz	u1710
  1640   001328  0E08               	movlw	8
  1641   00132A  5C0B               	subwf	i2cReadByte@bit^0,w,c
  1642   00132C  A0D8               	btfss	status,0,c
  1643   00132E  EF9B  F009         	goto	u1711
  1644   001332  EF9D  F009         	goto	u1710
  1645   001336                     u1711:
  1646   001336  EF89  F009         	goto	l1806
  1647   00133A                     u1710:
  1648   00133A                     
  1649                           ;i2c.c: 137:  i2c_write_bit(nack);
  1650   00133A  500A               	movf	i2cReadByte@nack^0,w,c
  1651   00133C  EC56  F009         	call	_i2c_write_bit
  1652   001340                     
  1653                           ;i2c.c: 138:  if (send_stop) {
  1654   001340  5008               	movf	i2cReadByte@send_stop^0,w,c
  1655   001342  B4D8               	btfsc	status,2,c
  1656   001344  EFA6  F009         	goto	u1721
  1657   001348  EFA8  F009         	goto	u1720
  1658   00134C                     u1721:
  1659   00134C  EFAA  F009         	goto	l1818
  1660   001350                     u1720:
  1661   001350                     
  1662                           ;i2c.c: 139:   i2c_stop();
  1663   001350  ECB6  F00A         	call	_i2c_stop	;wreg free
  1664   001354                     l1818:
  1665                           
  1666                           ;i2c.c: 141:  return byte;
  1667   001354  500D               	movf	i2cReadByte@byte^0,w,c
  1668   001356  0012               	return		;funcret
  1669   001358                     __end_of_i2cReadByte:
  1670                           	callstack 0
  1671                           
  1672 ;; *************** function _i2c_write_bit *****************
  1673 ;; Defined at:
  1674 ;;		line 84 in file "i2c.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  bit             1    wreg     unsigned char 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  bit             1    6[COMRAM] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1688 ;;      Params:         0       0       0       0       0       0       0       0       0
  1689 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1691 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1692 ;;Total ram usage:        1 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 2
  1695 ;; This function calls:
  1696 ;;		_I2C_delay
  1697 ;;		_clear_SCL
  1698 ;;		_clear_SDA
  1699 ;;		_read_SCL
  1700 ;;		_read_SDA
  1701 ;; This function is called by:
  1702 ;;		_i2cWriteByte
  1703 ;;		_i2cReadByte
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text14
  1708   0012AC                     __ptext14:
  1709                           	callstack 0
  1710   0012AC                     _i2c_write_bit:
  1711                           	callstack 26
  1712                           
  1713                           ;incstack = 0
  1714                           ;i2c_write_bit@bit stored from wreg
  1715   0012AC  6E07               	movwf	i2c_write_bit@bit^0,c
  1716   0012AE                     
  1717                           ;i2c.c: 85:  if (bit) {
  1718   0012AE  5007               	movf	i2c_write_bit@bit^0,w,c
  1719   0012B0  B4D8               	btfsc	status,2,c
  1720   0012B2  EF5D  F009         	goto	u1541
  1721   0012B6  EF5F  F009         	goto	u1540
  1722   0012BA                     u1541:
  1723   0012BA  EF63  F009         	goto	l1680
  1724   0012BE                     u1540:
  1725   0012BE                     
  1726                           ;i2c.c: 86:   read_SDA();
  1727   0012BE  EC37  F00A         	call	_read_SDA	;wreg free
  1728                           
  1729                           ;i2c.c: 87:  } else {
  1730   0012C2  EF65  F009         	goto	l1682
  1731   0012C6                     l1680:
  1732                           
  1733                           ;i2c.c: 88:   clear_SDA();
  1734   0012C6  ECCD  F00A         	call	_clear_SDA	;wreg free
  1735   0012CA                     l1682:
  1736                           
  1737                           ;i2c.c: 90:  I2C_delay();
  1738   0012CA  EC57  F00B         	call	_I2C_delay	;wreg free
  1739   0012CE                     l1684:
  1740   0012CE  EC53  F00A         	call	_read_SCL	;wreg free
  1741   0012D2  0900               	iorlw	0
  1742   0012D4  B4D8               	btfsc	status,2,c
  1743   0012D6  EF6F  F009         	goto	u1551
  1744   0012DA  EF71  F009         	goto	u1550
  1745   0012DE                     u1551:
  1746   0012DE  EF67  F009         	goto	l1684
  1747   0012E2                     u1550:
  1748   0012E2                     
  1749                           ;i2c.c: 92:  if (bit && read_SDA() == 0) {
  1750   0012E2  5007               	movf	i2c_write_bit@bit^0,w,c
  1751   0012E4  B4D8               	btfsc	status,2,c
  1752   0012E6  EF77  F009         	goto	u1561
  1753   0012EA  EF79  F009         	goto	u1560
  1754   0012EE                     u1561:
  1755   0012EE  EF7B  F009         	goto	l1690
  1756   0012F2                     u1560:
  1757   0012F2  EC37  F00A         	call	_read_SDA	;wreg free
  1758   0012F6                     l1690:
  1759                           
  1760                           ;i2c.c: 95:  I2C_delay();
  1761   0012F6  EC57  F00B         	call	_I2C_delay	;wreg free
  1762   0012FA                     
  1763                           ;i2c.c: 96:  clear_SCL();
  1764   0012FA  ECE2  F00A         	call	_clear_SCL	;wreg free
  1765   0012FE                     
  1766                           ;i2c.c: 97:  I2C_delay();
  1767   0012FE  EC57  F00B         	call	_I2C_delay	;wreg free
  1768   001302  0012               	return		;funcret
  1769   001304                     __end_of_i2c_write_bit:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _i2c_stop *****************
  1773 ;; Defined at:
  1774 ;;		line 71 in file "i2c.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1791 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 2
  1795 ;; This function calls:
  1796 ;;		_I2C_delay
  1797 ;;		_clear_SDA
  1798 ;;		_read_SCL
  1799 ;;		_read_SDA
  1800 ;; This function is called by:
  1801 ;;		_i2cWriteByte
  1802 ;;		_i2cReadByte
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text15
  1807   00156C                     __ptext15:
  1808                           	callstack 0
  1809   00156C                     _i2c_stop:
  1810                           	callstack 26
  1811   00156C                     
  1812                           ;i2c.c: 73:  clear_SDA();
  1813   00156C  ECCD  F00A         	call	_clear_SDA	;wreg free
  1814   001570                     
  1815                           ;i2c.c: 74:  I2C_delay();
  1816   001570  EC57  F00B         	call	_I2C_delay	;wreg free
  1817   001574                     l1666:
  1818   001574  EC53  F00A         	call	_read_SCL	;wreg free
  1819   001578  0900               	iorlw	0
  1820   00157A  B4D8               	btfsc	status,2,c
  1821   00157C  EFC2  F00A         	goto	u1531
  1822   001580  EFC4  F00A         	goto	u1530
  1823   001584                     u1531:
  1824   001584  EFBA  F00A         	goto	l1666
  1825   001588                     u1530:
  1826   001588                     
  1827                           ;i2c.c: 76:  I2C_delay();
  1828   001588  EC57  F00B         	call	_I2C_delay	;wreg free
  1829   00158C                     
  1830                           ;i2c.c: 77:  if (read_SDA() == 0) {
  1831   00158C  EC37  F00A         	call	_read_SDA	;wreg free
  1832   001590                     
  1833                           ;i2c.c: 80:  I2C_delay();
  1834   001590  EC57  F00B         	call	_I2C_delay	;wreg free
  1835   001594                     
  1836                           ;i2c.c: 81:  started = 0;
  1837   001594  0E00               	movlw	0
  1838   001596  6E2D               	movwf	_started^0,c
  1839   001598  0012               	return		;funcret
  1840   00159A                     __end_of_i2c_stop:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _clear_SDA *****************
  1844 ;; Defined at:
  1845 ;;		line 45 in file "i2c.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1859 ;;      Params:         0       0       0       0       0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1862 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 1
  1866 ;; This function calls:
  1867 ;;		_digitalWrite
  1868 ;;		_pinMode
  1869 ;; This function is called by:
  1870 ;;		_i2c_start
  1871 ;;		_i2c_stop
  1872 ;;		_i2c_write_bit
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text16
  1877   00159A                     __ptext16:
  1878                           	callstack 0
  1879   00159A                     _clear_SDA:
  1880                           	callstack 26
  1881   00159A                     
  1882                           ;i2c.c: 47:  pinMode(PIN_B0,0);
  1883   00159A  0E00               	movlw	0
  1884   00159C  6E02               	movwf	(pinMode@pin+1)^0,c
  1885   00159E  0E08               	movlw	8
  1886   0015A0  6E01               	movwf	pinMode@pin^0,c
  1887   0015A2  0E00               	movlw	0
  1888   0015A4  6E04               	movwf	(pinMode@type+1)^0,c
  1889   0015A6  0E00               	movlw	0
  1890   0015A8  6E03               	movwf	pinMode@type^0,c
  1891   0015AA  EC28  F005         	call	_pinMode	;wreg free
  1892                           
  1893                           ;i2c.c: 48:  digitalWrite(PIN_B0,0);
  1894   0015AE  0E00               	movlw	0
  1895   0015B0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1896   0015B2  0E08               	movlw	8
  1897   0015B4  6E01               	movwf	digitalWrite@pin^0,c
  1898   0015B6  0E00               	movlw	0
  1899   0015B8  6E04               	movwf	(digitalWrite@value+1)^0,c
  1900   0015BA  0E00               	movlw	0
  1901   0015BC  6E03               	movwf	digitalWrite@value^0,c
  1902   0015BE  EC01  F004         	call	_digitalWrite	;wreg free
  1903   0015C2  0012               	return		;funcret
  1904   0015C4                     __end_of_clear_SDA:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _i2c_read_bit *****************
  1908 ;; Defined at:
  1909 ;;		line 100 in file "i2c.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  bit             1    6[COMRAM] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      unsigned char 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1923 ;;      Params:         0       0       0       0       0       0       0       0       0
  1924 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1926 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1927 ;;Total ram usage:        1 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 2
  1930 ;; This function calls:
  1931 ;;		_I2C_delay
  1932 ;;		_clear_SCL
  1933 ;;		_read_SCL
  1934 ;;		_read_SDA
  1935 ;; This function is called by:
  1936 ;;		_i2cWriteByte
  1937 ;;		_i2cReadByte
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text17
  1942   0014DE                     __ptext17:
  1943                           	callstack 0
  1944   0014DE                     _i2c_read_bit:
  1945                           	callstack 26
  1946   0014DE                     
  1947                           ;i2c.c: 101:  unsigned char bit;;i2c.c: 102:  read_SDA();
  1948   0014DE  EC37  F00A         	call	_read_SDA	;wreg free
  1949   0014E2                     
  1950                           ;i2c.c: 103:  I2C_delay();
  1951   0014E2  EC57  F00B         	call	_I2C_delay	;wreg free
  1952   0014E6                     l1700:
  1953   0014E6  EC53  F00A         	call	_read_SCL	;wreg free
  1954   0014EA  0900               	iorlw	0
  1955   0014EC  B4D8               	btfsc	status,2,c
  1956   0014EE  EF7B  F00A         	goto	u1571
  1957   0014F2  EF7D  F00A         	goto	u1570
  1958   0014F6                     u1571:
  1959   0014F6  EF73  F00A         	goto	l1700
  1960   0014FA                     u1570:
  1961   0014FA                     
  1962                           ;i2c.c: 105:  bit = read_SDA();
  1963   0014FA  EC37  F00A         	call	_read_SDA	;wreg free
  1964   0014FE  6E07               	movwf	i2c_read_bit@bit^0,c
  1965   001500                     
  1966                           ;i2c.c: 106:  I2C_delay();
  1967   001500  EC57  F00B         	call	_I2C_delay	;wreg free
  1968   001504                     
  1969                           ;i2c.c: 107:  clear_SCL();
  1970   001504  ECE2  F00A         	call	_clear_SCL	;wreg free
  1971                           
  1972                           ;i2c.c: 108:  I2C_delay();
  1973   001508  EC57  F00B         	call	_I2C_delay	;wreg free
  1974   00150C                     
  1975                           ;i2c.c: 109:  return bit;
  1976   00150C  5007               	movf	i2c_read_bit@bit^0,w,c
  1977   00150E  0012               	return		;funcret
  1978   001510                     __end_of_i2c_read_bit:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _read_SDA *****************
  1982 ;; Defined at:
  1983 ;;		line 34 in file "i2c.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      unsigned char 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2000 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2001 ;;Total ram usage:        0 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 1
  2004 ;; This function calls:
  2005 ;;		_digitalRead
  2006 ;;		_pinMode
  2007 ;; This function is called by:
  2008 ;;		_i2c_start
  2009 ;;		_i2c_stop
  2010 ;;		_i2c_write_bit
  2011 ;;		_i2c_read_bit
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text18
  2016   00146E                     __ptext18:
  2017                           	callstack 0
  2018   00146E                     _read_SDA:
  2019                           	callstack 26
  2020   00146E                     
  2021                           ;i2c.c: 36:  pinMode(PIN_B0,1);
  2022   00146E  0E00               	movlw	0
  2023   001470  6E02               	movwf	(pinMode@pin+1)^0,c
  2024   001472  0E08               	movlw	8
  2025   001474  6E01               	movwf	pinMode@pin^0,c
  2026   001476  0E00               	movlw	0
  2027   001478  6E04               	movwf	(pinMode@type+1)^0,c
  2028   00147A  0E01               	movlw	1
  2029   00147C  6E03               	movwf	pinMode@type^0,c
  2030   00147E  EC28  F005         	call	_pinMode	;wreg free
  2031                           
  2032                           ;i2c.c: 37:  return !!digitalRead(PIN_B0);
  2033   001482  0E00               	movlw	0
  2034   001484  6E02               	movwf	(digitalRead@pin+1)^0,c
  2035   001486  0E08               	movlw	8
  2036   001488  6E01               	movwf	digitalRead@pin^0,c
  2037   00148A  EC3F  F007         	call	_digitalRead	;wreg free
  2038   00148E  5001               	movf	?_digitalRead^0,w,c
  2039   001490  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2040   001492  A4D8               	btfss	status,2,c
  2041   001494  EF4E  F00A         	goto	u1491
  2042   001498  EF51  F00A         	goto	u1490
  2043   00149C                     u1491:
  2044   00149C  0E01               	movlw	1
  2045   00149E  EF52  F00A         	goto	u1500
  2046   0014A2                     u1490:
  2047   0014A2  0E00               	movlw	0
  2048   0014A4                     u1500:
  2049   0014A4  0012               	return		;funcret
  2050   0014A6                     __end_of_read_SDA:
  2051                           	callstack 0
  2052                           
  2053 ;; *************** function _read_SCL *****************
  2054 ;; Defined at:
  2055 ;;		line 29 in file "i2c.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;		None
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      unsigned char 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2069 ;;      Params:         0       0       0       0       0       0       0       0       0
  2070 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2072 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2073 ;;Total ram usage:        0 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 1
  2076 ;; This function calls:
  2077 ;;		_digitalRead
  2078 ;;		_pinMode
  2079 ;; This function is called by:
  2080 ;;		_i2c_start
  2081 ;;		_i2c_stop
  2082 ;;		_i2c_write_bit
  2083 ;;		_i2c_read_bit
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text19
  2088   0014A6                     __ptext19:
  2089                           	callstack 0
  2090   0014A6                     _read_SCL:
  2091                           	callstack 26
  2092   0014A6                     
  2093                           ;i2c.c: 31:  pinMode(PIN_B1,1);
  2094   0014A6  0E00               	movlw	0
  2095   0014A8  6E02               	movwf	(pinMode@pin+1)^0,c
  2096   0014AA  0E09               	movlw	9
  2097   0014AC  6E01               	movwf	pinMode@pin^0,c
  2098   0014AE  0E00               	movlw	0
  2099   0014B0  6E04               	movwf	(pinMode@type+1)^0,c
  2100   0014B2  0E01               	movlw	1
  2101   0014B4  6E03               	movwf	pinMode@type^0,c
  2102   0014B6  EC28  F005         	call	_pinMode	;wreg free
  2103                           
  2104                           ;i2c.c: 32:  return !!digitalRead(PIN_B1);
  2105   0014BA  0E00               	movlw	0
  2106   0014BC  6E02               	movwf	(digitalRead@pin+1)^0,c
  2107   0014BE  0E09               	movlw	9
  2108   0014C0  6E01               	movwf	digitalRead@pin^0,c
  2109   0014C2  EC3F  F007         	call	_digitalRead	;wreg free
  2110   0014C6  5001               	movf	?_digitalRead^0,w,c
  2111   0014C8  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2112   0014CA  A4D8               	btfss	status,2,c
  2113   0014CC  EF6A  F00A         	goto	u1471
  2114   0014D0  EF6D  F00A         	goto	u1470
  2115   0014D4                     u1471:
  2116   0014D4  0E01               	movlw	1
  2117   0014D6  EF6E  F00A         	goto	u1480
  2118   0014DA                     u1470:
  2119   0014DA  0E00               	movlw	0
  2120   0014DC                     u1480:
  2121   0014DC  0012               	return		;funcret
  2122   0014DE                     __end_of_read_SCL:
  2123                           	callstack 0
  2124                           
  2125 ;; *************** function _digitalRead *****************
  2126 ;; Defined at:
  2127 ;;		line 39 in file "io.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  pin             2    0[COMRAM] int 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  2    0[COMRAM] int 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2141 ;;      Params:         2       0       0       0       0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2143 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2144 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2145 ;;Total ram usage:        5 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_read_SCL
  2151 ;;		_read_SDA
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text20
  2156   000E7E                     __ptext20:
  2157                           	callstack 0
  2158   000E7E                     _digitalRead:
  2159                           	callstack 26
  2160   000E7E                     
  2161                           ;io.c: 40:     if(pin <8){
  2162   000E7E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2163   000E80  EF4D  F007         	goto	u1170
  2164   000E84  5002               	movf	(digitalRead@pin+1)^0,w,c
  2165   000E86  E107               	bnz	u1171
  2166   000E88  0E08               	movlw	8
  2167   000E8A  5C01               	subwf	digitalRead@pin^0,w,c
  2168   000E8C  B0D8               	btfsc	status,0,c
  2169   000E8E  EF4B  F007         	goto	u1171
  2170   000E92  EF4D  F007         	goto	u1170
  2171   000E96                     u1171:
  2172   000E96  EF61  F007         	goto	l1558
  2173   000E9A                     u1170:
  2174   000E9A                     
  2175                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  2176   000E9A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2177   000E9E  0E01               	movlw	1
  2178   000EA0  6E04               	movwf	(??_digitalRead+1)^0,c
  2179   000EA2  2A03               	incf	??_digitalRead^0,f,c
  2180   000EA4  EF56  F007         	goto	u1184
  2181   000EA8                     u1185:
  2182   000EA8  90D8               	bcf	status,0,c
  2183   000EAA  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2184   000EAC                     u1184:
  2185   000EAC  2E03               	decfsz	??_digitalRead^0,f,c
  2186   000EAE  EF54  F007         	goto	u1185
  2187   000EB2  5004               	movf	(??_digitalRead+1)^0,w,c
  2188   000EB4  1480               	andwf	128,w,c	;volatile
  2189   000EB6  6E05               	movwf	(??_digitalRead+2)^0,c
  2190   000EB8  5005               	movf	(??_digitalRead+2)^0,w,c
  2191   000EBA  6E01               	movwf	?_digitalRead^0,c
  2192   000EBC  6A02               	clrf	(?_digitalRead+1)^0,c
  2193   000EBE  EFF3  F007         	goto	l266
  2194   000EC2                     l1558:
  2195   000EC2  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2196   000EC4  EF6F  F007         	goto	u1190
  2197   000EC8  5002               	movf	(digitalRead@pin+1)^0,w,c
  2198   000ECA  E107               	bnz	u1191
  2199   000ECC  0E10               	movlw	16
  2200   000ECE  5C01               	subwf	digitalRead@pin^0,w,c
  2201   000ED0  B0D8               	btfsc	status,0,c
  2202   000ED2  EF6D  F007         	goto	u1191
  2203   000ED6  EF6F  F007         	goto	u1190
  2204   000EDA                     u1191:
  2205   000EDA  EF85  F007         	goto	l1566
  2206   000EDE                     u1190:
  2207   000EDE                     
  2208                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  2209   000EDE  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2210   000EE2  0EF8               	movlw	-8
  2211   000EE4  2603               	addwf	??_digitalRead^0,f,c
  2212   000EE6  0E01               	movlw	1
  2213   000EE8  6E04               	movwf	(??_digitalRead+1)^0,c
  2214   000EEA  2A03               	incf	??_digitalRead^0,f,c
  2215   000EEC  EF7A  F007         	goto	u1204
  2216   000EF0                     u1205:
  2217   000EF0  90D8               	bcf	status,0,c
  2218   000EF2  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2219   000EF4                     u1204:
  2220   000EF4  2E03               	decfsz	??_digitalRead^0,f,c
  2221   000EF6  EF78  F007         	goto	u1205
  2222   000EFA  5004               	movf	(??_digitalRead+1)^0,w,c
  2223   000EFC  1481               	andwf	129,w,c	;volatile
  2224   000EFE  6E05               	movwf	(??_digitalRead+2)^0,c
  2225   000F00  5005               	movf	(??_digitalRead+2)^0,w,c
  2226   000F02  6E01               	movwf	?_digitalRead^0,c
  2227   000F04  6A02               	clrf	(?_digitalRead+1)^0,c
  2228   000F06  EFF3  F007         	goto	l266
  2229   000F0A                     l1566:
  2230   000F0A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2231   000F0C  EF93  F007         	goto	u1210
  2232   000F10  5002               	movf	(digitalRead@pin+1)^0,w,c
  2233   000F12  E107               	bnz	u1211
  2234   000F14  0E18               	movlw	24
  2235   000F16  5C01               	subwf	digitalRead@pin^0,w,c
  2236   000F18  B0D8               	btfsc	status,0,c
  2237   000F1A  EF91  F007         	goto	u1211
  2238   000F1E  EF93  F007         	goto	u1210
  2239   000F22                     u1211:
  2240   000F22  EFA9  F007         	goto	l1574
  2241   000F26                     u1210:
  2242   000F26                     
  2243                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  2244   000F26  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2245   000F2A  0EF0               	movlw	-16
  2246   000F2C  2603               	addwf	??_digitalRead^0,f,c
  2247   000F2E  0E01               	movlw	1
  2248   000F30  6E04               	movwf	(??_digitalRead+1)^0,c
  2249   000F32  2A03               	incf	??_digitalRead^0,f,c
  2250   000F34  EF9E  F007         	goto	u1224
  2251   000F38                     u1225:
  2252   000F38  90D8               	bcf	status,0,c
  2253   000F3A  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2254   000F3C                     u1224:
  2255   000F3C  2E03               	decfsz	??_digitalRead^0,f,c
  2256   000F3E  EF9C  F007         	goto	u1225
  2257   000F42  5004               	movf	(??_digitalRead+1)^0,w,c
  2258   000F44  1482               	andwf	130,w,c	;volatile
  2259   000F46  6E05               	movwf	(??_digitalRead+2)^0,c
  2260   000F48  5005               	movf	(??_digitalRead+2)^0,w,c
  2261   000F4A  6E01               	movwf	?_digitalRead^0,c
  2262   000F4C  6A02               	clrf	(?_digitalRead+1)^0,c
  2263   000F4E  EFF3  F007         	goto	l266
  2264   000F52                     l1574:
  2265   000F52  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2266   000F54  EFB7  F007         	goto	u1230
  2267   000F58  5002               	movf	(digitalRead@pin+1)^0,w,c
  2268   000F5A  E107               	bnz	u1231
  2269   000F5C  0E20               	movlw	32
  2270   000F5E  5C01               	subwf	digitalRead@pin^0,w,c
  2271   000F60  B0D8               	btfsc	status,0,c
  2272   000F62  EFB5  F007         	goto	u1231
  2273   000F66  EFB7  F007         	goto	u1230
  2274   000F6A                     u1231:
  2275   000F6A  EFCD  F007         	goto	l1582
  2276   000F6E                     u1230:
  2277   000F6E                     
  2278                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  2279   000F6E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2280   000F72  0EE8               	movlw	-24
  2281   000F74  2603               	addwf	??_digitalRead^0,f,c
  2282   000F76  0E01               	movlw	1
  2283   000F78  6E04               	movwf	(??_digitalRead+1)^0,c
  2284   000F7A  2A03               	incf	??_digitalRead^0,f,c
  2285   000F7C  EFC2  F007         	goto	u1244
  2286   000F80                     u1245:
  2287   000F80  90D8               	bcf	status,0,c
  2288   000F82  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2289   000F84                     u1244:
  2290   000F84  2E03               	decfsz	??_digitalRead^0,f,c
  2291   000F86  EFC0  F007         	goto	u1245
  2292   000F8A  5004               	movf	(??_digitalRead+1)^0,w,c
  2293   000F8C  1483               	andwf	131,w,c	;volatile
  2294   000F8E  6E05               	movwf	(??_digitalRead+2)^0,c
  2295   000F90  5005               	movf	(??_digitalRead+2)^0,w,c
  2296   000F92  6E01               	movwf	?_digitalRead^0,c
  2297   000F94  6A02               	clrf	(?_digitalRead+1)^0,c
  2298   000F96  EFF3  F007         	goto	l266
  2299   000F9A                     l1582:
  2300   000F9A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2301   000F9C  EFDB  F007         	goto	u1250
  2302   000FA0  5002               	movf	(digitalRead@pin+1)^0,w,c
  2303   000FA2  E107               	bnz	u1251
  2304   000FA4  0E28               	movlw	40
  2305   000FA6  5C01               	subwf	digitalRead@pin^0,w,c
  2306   000FA8  B0D8               	btfsc	status,0,c
  2307   000FAA  EFD9  F007         	goto	u1251
  2308   000FAE  EFDB  F007         	goto	u1250
  2309   000FB2                     u1251:
  2310   000FB2  EFF1  F007         	goto	l271
  2311   000FB6                     u1250:
  2312   000FB6                     
  2313                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  2314   000FB6  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2315   000FBA  0EE0               	movlw	-32
  2316   000FBC  2603               	addwf	??_digitalRead^0,f,c
  2317   000FBE  0E01               	movlw	1
  2318   000FC0  6E04               	movwf	(??_digitalRead+1)^0,c
  2319   000FC2  2A03               	incf	??_digitalRead^0,f,c
  2320   000FC4  EFE6  F007         	goto	u1264
  2321   000FC8                     u1265:
  2322   000FC8  90D8               	bcf	status,0,c
  2323   000FCA  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2324   000FCC                     u1264:
  2325   000FCC  2E03               	decfsz	??_digitalRead^0,f,c
  2326   000FCE  EFE4  F007         	goto	u1265
  2327   000FD2  5004               	movf	(??_digitalRead+1)^0,w,c
  2328   000FD4  1484               	andwf	132,w,c	;volatile
  2329   000FD6  6E05               	movwf	(??_digitalRead+2)^0,c
  2330   000FD8  5005               	movf	(??_digitalRead+2)^0,w,c
  2331   000FDA  6E01               	movwf	?_digitalRead^0,c
  2332   000FDC  6A02               	clrf	(?_digitalRead+1)^0,c
  2333   000FDE  EFF3  F007         	goto	l266
  2334   000FE2                     l271:
  2335   000FE2                     
  2336                           ;io.c: 51:     return -1;
  2337   000FE2  6801               	setf	?_digitalRead^0,c
  2338   000FE4  6802               	setf	(?_digitalRead+1)^0,c
  2339   000FE6                     l266:
  2340   000FE6  0012               	return		;funcret
  2341   000FE8                     __end_of_digitalRead:
  2342                           	callstack 0
  2343                           
  2344 ;; *************** function _clear_SCL *****************
  2345 ;; Defined at:
  2346 ;;		line 39 in file "i2c.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 1
  2367 ;; This function calls:
  2368 ;;		_digitalWrite
  2369 ;;		_pinMode
  2370 ;; This function is called by:
  2371 ;;		_i2c_start
  2372 ;;		_i2c_write_bit
  2373 ;;		_i2c_read_bit
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text21
  2378   0015C4                     __ptext21:
  2379                           	callstack 0
  2380   0015C4                     _clear_SCL:
  2381                           	callstack 26
  2382   0015C4                     
  2383                           ;i2c.c: 41:  pinMode(PIN_B1,0);
  2384   0015C4  0E00               	movlw	0
  2385   0015C6  6E02               	movwf	(pinMode@pin+1)^0,c
  2386   0015C8  0E09               	movlw	9
  2387   0015CA  6E01               	movwf	pinMode@pin^0,c
  2388   0015CC  0E00               	movlw	0
  2389   0015CE  6E04               	movwf	(pinMode@type+1)^0,c
  2390   0015D0  0E00               	movlw	0
  2391   0015D2  6E03               	movwf	pinMode@type^0,c
  2392   0015D4  EC28  F005         	call	_pinMode	;wreg free
  2393                           
  2394                           ;i2c.c: 42:  digitalWrite(PIN_B1,0);
  2395   0015D8  0E00               	movlw	0
  2396   0015DA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2397   0015DC  0E09               	movlw	9
  2398   0015DE  6E01               	movwf	digitalWrite@pin^0,c
  2399   0015E0  0E00               	movlw	0
  2400   0015E2  6E04               	movwf	(digitalWrite@value+1)^0,c
  2401   0015E4  0E00               	movlw	0
  2402   0015E6  6E03               	movwf	digitalWrite@value^0,c
  2403   0015E8  EC01  F004         	call	_digitalWrite	;wreg free
  2404   0015EC  0012               	return		;funcret
  2405   0015EE                     __end_of_clear_SCL:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _digitalWrite *****************
  2409 ;; Defined at:
  2410 ;;		line 14 in file "io.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  pin             2    0[COMRAM] int 
  2413 ;;  value           2    2[COMRAM] int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2425 ;;      Params:         4       0       0       0       0       0       0       0       0
  2426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2427 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2428 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2429 ;;Total ram usage:        6 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_clear_SCL
  2435 ;;		_clear_SDA
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text22
  2440   000802                     __ptext22:
  2441                           	callstack 0
  2442   000802                     _digitalWrite:
  2443                           	callstack 26
  2444   000802                     
  2445                           ;io.c: 16:     if(pin <8){
  2446   000802  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2447   000804  EF0F  F004         	goto	u1270
  2448   000808  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2449   00080A  E107               	bnz	u1271
  2450   00080C  0E08               	movlw	8
  2451   00080E  5C01               	subwf	digitalWrite@pin^0,w,c
  2452   000810  B0D8               	btfsc	status,0,c
  2453   000812  EF0D  F004         	goto	u1271
  2454   000816  EF0F  F004         	goto	u1270
  2455   00081A                     u1271:
  2456   00081A  EF39  F004         	goto	l1596
  2457   00081E                     u1270:
  2458   00081E                     
  2459                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2460   00081E  5003               	movf	digitalWrite@value^0,w,c
  2461   000820  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2462   000822  B4D8               	btfsc	status,2,c
  2463   000824  EF16  F004         	goto	u1281
  2464   000828  EF18  F004         	goto	u1280
  2465   00082C                     u1281:
  2466   00082C  EF28  F004         	goto	l1594
  2467   000830                     u1280:
  2468   000830  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2469   000834  0E01               	movlw	1
  2470   000836  6E06               	movwf	(??_digitalWrite+1)^0,c
  2471   000838  2A05               	incf	??_digitalWrite^0,f,c
  2472   00083A  EF21  F004         	goto	u1294
  2473   00083E                     u1295:
  2474   00083E  90D8               	bcf	status,0,c
  2475   000840  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2476   000842                     u1294:
  2477   000842  2E05               	decfsz	??_digitalWrite^0,f,c
  2478   000844  EF1F  F004         	goto	u1295
  2479   000848  5006               	movf	(??_digitalWrite+1)^0,w,c
  2480   00084A  1280               	iorwf	128,f,c	;volatile
  2481   00084C  EF27  F005         	goto	l262
  2482   000850                     l1594:
  2483   000850  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2484   000854  0E01               	movlw	1
  2485   000856  6E06               	movwf	(??_digitalWrite+1)^0,c
  2486   000858  2A05               	incf	??_digitalWrite^0,f,c
  2487   00085A  EF31  F004         	goto	u1304
  2488   00085E                     u1305:
  2489   00085E  90D8               	bcf	status,0,c
  2490   000860  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2491   000862                     u1304:
  2492   000862  2E05               	decfsz	??_digitalWrite^0,f,c
  2493   000864  EF2F  F004         	goto	u1305
  2494   000868  5006               	movf	(??_digitalWrite+1)^0,w,c
  2495   00086A  0AFF               	xorlw	255
  2496   00086C  1680               	andwf	128,f,c	;volatile
  2497   00086E  EF27  F005         	goto	l262
  2498   000872                     l1596:
  2499   000872  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2500   000874  EF47  F004         	goto	u1310
  2501   000878  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2502   00087A  E107               	bnz	u1311
  2503   00087C  0E10               	movlw	16
  2504   00087E  5C01               	subwf	digitalWrite@pin^0,w,c
  2505   000880  B0D8               	btfsc	status,0,c
  2506   000882  EF45  F004         	goto	u1311
  2507   000886  EF47  F004         	goto	u1310
  2508   00088A                     u1311:
  2509   00088A  EF75  F004         	goto	l1604
  2510   00088E                     u1310:
  2511   00088E                     
  2512                           ;io.c: 20:         pin -=8;
  2513   00088E  0EF8               	movlw	248
  2514   000890  2601               	addwf	digitalWrite@pin^0,f,c
  2515   000892  0EFF               	movlw	255
  2516   000894  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2517                           
  2518                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  2519   000896  5003               	movf	digitalWrite@value^0,w,c
  2520   000898  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2521   00089A  B4D8               	btfsc	status,2,c
  2522   00089C  EF52  F004         	goto	u1321
  2523   0008A0  EF54  F004         	goto	u1320
  2524   0008A4                     u1321:
  2525   0008A4  EF64  F004         	goto	l1602
  2526   0008A8                     u1320:
  2527   0008A8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2528   0008AC  0E01               	movlw	1
  2529   0008AE  6E06               	movwf	(??_digitalWrite+1)^0,c
  2530   0008B0  2A05               	incf	??_digitalWrite^0,f,c
  2531   0008B2  EF5D  F004         	goto	u1334
  2532   0008B6                     u1335:
  2533   0008B6  90D8               	bcf	status,0,c
  2534   0008B8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2535   0008BA                     u1334:
  2536   0008BA  2E05               	decfsz	??_digitalWrite^0,f,c
  2537   0008BC  EF5B  F004         	goto	u1335
  2538   0008C0  5006               	movf	(??_digitalWrite+1)^0,w,c
  2539   0008C2  1281               	iorwf	129,f,c	;volatile
  2540   0008C4  EF27  F005         	goto	l262
  2541   0008C8                     l1602:
  2542   0008C8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2543   0008CC  0E01               	movlw	1
  2544   0008CE  6E06               	movwf	(??_digitalWrite+1)^0,c
  2545   0008D0  2A05               	incf	??_digitalWrite^0,f,c
  2546   0008D2  EF6D  F004         	goto	u1344
  2547   0008D6                     u1345:
  2548   0008D6  90D8               	bcf	status,0,c
  2549   0008D8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2550   0008DA                     u1344:
  2551   0008DA  2E05               	decfsz	??_digitalWrite^0,f,c
  2552   0008DC  EF6B  F004         	goto	u1345
  2553   0008E0  5006               	movf	(??_digitalWrite+1)^0,w,c
  2554   0008E2  0AFF               	xorlw	255
  2555   0008E4  1681               	andwf	129,f,c	;volatile
  2556   0008E6  EF27  F005         	goto	l262
  2557   0008EA                     l1604:
  2558   0008EA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2559   0008EC  EF83  F004         	goto	u1350
  2560   0008F0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2561   0008F2  E107               	bnz	u1351
  2562   0008F4  0E18               	movlw	24
  2563   0008F6  5C01               	subwf	digitalWrite@pin^0,w,c
  2564   0008F8  B0D8               	btfsc	status,0,c
  2565   0008FA  EF81  F004         	goto	u1351
  2566   0008FE  EF83  F004         	goto	u1350
  2567   000902                     u1351:
  2568   000902  EFB1  F004         	goto	l1612
  2569   000906                     u1350:
  2570   000906                     
  2571                           ;io.c: 24:         pin -=16;
  2572   000906  0EF0               	movlw	240
  2573   000908  2601               	addwf	digitalWrite@pin^0,f,c
  2574   00090A  0EFF               	movlw	255
  2575   00090C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2576                           
  2577                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  2578   00090E  5003               	movf	digitalWrite@value^0,w,c
  2579   000910  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2580   000912  B4D8               	btfsc	status,2,c
  2581   000914  EF8E  F004         	goto	u1361
  2582   000918  EF90  F004         	goto	u1360
  2583   00091C                     u1361:
  2584   00091C  EFA0  F004         	goto	l1610
  2585   000920                     u1360:
  2586   000920  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2587   000924  0E01               	movlw	1
  2588   000926  6E06               	movwf	(??_digitalWrite+1)^0,c
  2589   000928  2A05               	incf	??_digitalWrite^0,f,c
  2590   00092A  EF99  F004         	goto	u1374
  2591   00092E                     u1375:
  2592   00092E  90D8               	bcf	status,0,c
  2593   000930  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2594   000932                     u1374:
  2595   000932  2E05               	decfsz	??_digitalWrite^0,f,c
  2596   000934  EF97  F004         	goto	u1375
  2597   000938  5006               	movf	(??_digitalWrite+1)^0,w,c
  2598   00093A  1282               	iorwf	130,f,c	;volatile
  2599   00093C  EF27  F005         	goto	l262
  2600   000940                     l1610:
  2601   000940  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2602   000944  0E01               	movlw	1
  2603   000946  6E06               	movwf	(??_digitalWrite+1)^0,c
  2604   000948  2A05               	incf	??_digitalWrite^0,f,c
  2605   00094A  EFA9  F004         	goto	u1384
  2606   00094E                     u1385:
  2607   00094E  90D8               	bcf	status,0,c
  2608   000950  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2609   000952                     u1384:
  2610   000952  2E05               	decfsz	??_digitalWrite^0,f,c
  2611   000954  EFA7  F004         	goto	u1385
  2612   000958  5006               	movf	(??_digitalWrite+1)^0,w,c
  2613   00095A  0AFF               	xorlw	255
  2614   00095C  1682               	andwf	130,f,c	;volatile
  2615   00095E  EF27  F005         	goto	l262
  2616   000962                     l1612:
  2617   000962  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2618   000964  EFBF  F004         	goto	u1390
  2619   000968  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2620   00096A  E107               	bnz	u1391
  2621   00096C  0E20               	movlw	32
  2622   00096E  5C01               	subwf	digitalWrite@pin^0,w,c
  2623   000970  B0D8               	btfsc	status,0,c
  2624   000972  EFBD  F004         	goto	u1391
  2625   000976  EFBF  F004         	goto	u1390
  2626   00097A                     u1391:
  2627   00097A  EFED  F004         	goto	l1620
  2628   00097E                     u1390:
  2629   00097E                     
  2630                           ;io.c: 28:         pin -=24;
  2631   00097E  0EE8               	movlw	232
  2632   000980  2601               	addwf	digitalWrite@pin^0,f,c
  2633   000982  0EFF               	movlw	255
  2634   000984  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2635                           
  2636                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  2637   000986  5003               	movf	digitalWrite@value^0,w,c
  2638   000988  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2639   00098A  B4D8               	btfsc	status,2,c
  2640   00098C  EFCA  F004         	goto	u1401
  2641   000990  EFCC  F004         	goto	u1400
  2642   000994                     u1401:
  2643   000994  EFDC  F004         	goto	l1618
  2644   000998                     u1400:
  2645   000998  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2646   00099C  0E01               	movlw	1
  2647   00099E  6E06               	movwf	(??_digitalWrite+1)^0,c
  2648   0009A0  2A05               	incf	??_digitalWrite^0,f,c
  2649   0009A2  EFD5  F004         	goto	u1414
  2650   0009A6                     u1415:
  2651   0009A6  90D8               	bcf	status,0,c
  2652   0009A8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2653   0009AA                     u1414:
  2654   0009AA  2E05               	decfsz	??_digitalWrite^0,f,c
  2655   0009AC  EFD3  F004         	goto	u1415
  2656   0009B0  5006               	movf	(??_digitalWrite+1)^0,w,c
  2657   0009B2  1283               	iorwf	131,f,c	;volatile
  2658   0009B4  EF27  F005         	goto	l262
  2659   0009B8                     l1618:
  2660   0009B8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2661   0009BC  0E01               	movlw	1
  2662   0009BE  6E06               	movwf	(??_digitalWrite+1)^0,c
  2663   0009C0  2A05               	incf	??_digitalWrite^0,f,c
  2664   0009C2  EFE5  F004         	goto	u1424
  2665   0009C6                     u1425:
  2666   0009C6  90D8               	bcf	status,0,c
  2667   0009C8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2668   0009CA                     u1424:
  2669   0009CA  2E05               	decfsz	??_digitalWrite^0,f,c
  2670   0009CC  EFE3  F004         	goto	u1425
  2671   0009D0  5006               	movf	(??_digitalWrite+1)^0,w,c
  2672   0009D2  0AFF               	xorlw	255
  2673   0009D4  1683               	andwf	131,f,c	;volatile
  2674   0009D6  EF27  F005         	goto	l262
  2675   0009DA                     l1620:
  2676   0009DA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2677   0009DC  EFFB  F004         	goto	u1430
  2678   0009E0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2679   0009E2  E107               	bnz	u1431
  2680   0009E4  0E28               	movlw	40
  2681   0009E6  5C01               	subwf	digitalWrite@pin^0,w,c
  2682   0009E8  B0D8               	btfsc	status,0,c
  2683   0009EA  EFF9  F004         	goto	u1431
  2684   0009EE  EFFB  F004         	goto	u1430
  2685   0009F2                     u1431:
  2686   0009F2  EF27  F005         	goto	l262
  2687   0009F6                     u1430:
  2688   0009F6                     
  2689                           ;io.c: 32:         pin -=32;
  2690   0009F6  0EE0               	movlw	224
  2691   0009F8  2601               	addwf	digitalWrite@pin^0,f,c
  2692   0009FA  0EFF               	movlw	255
  2693   0009FC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2694                           
  2695                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  2696   0009FE  5003               	movf	digitalWrite@value^0,w,c
  2697   000A00  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2698   000A02  B4D8               	btfsc	status,2,c
  2699   000A04  EF06  F005         	goto	u1441
  2700   000A08  EF08  F005         	goto	u1440
  2701   000A0C                     u1441:
  2702   000A0C  EF18  F005         	goto	l1626
  2703   000A10                     u1440:
  2704   000A10  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2705   000A14  0E01               	movlw	1
  2706   000A16  6E06               	movwf	(??_digitalWrite+1)^0,c
  2707   000A18  2A05               	incf	??_digitalWrite^0,f,c
  2708   000A1A  EF11  F005         	goto	u1454
  2709   000A1E                     u1455:
  2710   000A1E  90D8               	bcf	status,0,c
  2711   000A20  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2712   000A22                     u1454:
  2713   000A22  2E05               	decfsz	??_digitalWrite^0,f,c
  2714   000A24  EF0F  F005         	goto	u1455
  2715   000A28  5006               	movf	(??_digitalWrite+1)^0,w,c
  2716   000A2A  1284               	iorwf	132,f,c	;volatile
  2717   000A2C  EF27  F005         	goto	l262
  2718   000A30                     l1626:
  2719   000A30  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2720   000A34  0E01               	movlw	1
  2721   000A36  6E06               	movwf	(??_digitalWrite+1)^0,c
  2722   000A38  2A05               	incf	??_digitalWrite^0,f,c
  2723   000A3A  EF21  F005         	goto	u1464
  2724   000A3E                     u1465:
  2725   000A3E  90D8               	bcf	status,0,c
  2726   000A40  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2727   000A42                     u1464:
  2728   000A42  2E05               	decfsz	??_digitalWrite^0,f,c
  2729   000A44  EF1F  F005         	goto	u1465
  2730   000A48  5006               	movf	(??_digitalWrite+1)^0,w,c
  2731   000A4A  0AFF               	xorlw	255
  2732   000A4C  1684               	andwf	132,f,c	;volatile
  2733   000A4E                     l262:
  2734   000A4E  0012               	return		;funcret
  2735   000A50                     __end_of_digitalWrite:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function _I2C_delay *****************
  2739 ;; Defined at:
  2740 ;;		line 22 in file "i2c.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  i               2    0        int 
  2745 ;;  v               2    0        volatile int 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		None
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_i2c_start
  2765 ;;		_i2c_stop
  2766 ;;		_i2c_write_bit
  2767 ;;		_i2c_read_bit
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text23
  2772   0016AE                     __ptext23:
  2773                           	callstack 0
  2774   0016AE                     _I2C_delay:
  2775                           	callstack 27
  2776   0016AE  0012               	return		;funcret
  2777   0016B0                     __end_of_I2C_delay:
  2778                           	callstack 0
  2779                           
  2780 ;; *************** function _dsInit *****************
  2781 ;; Defined at:
  2782 ;;		line 17 in file "ds1307.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2799 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 2
  2803 ;; This function calls:
  2804 ;;		_i2cInit
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text24
  2811   0016A8                     __ptext24:
  2812                           	callstack 0
  2813   0016A8                     _dsInit:
  2814                           	callstack 28
  2815   0016A8                     
  2816                           ;ds1307.c: 18:  i2cInit();
  2817   0016A8  ECF7  F00A         	call	_i2cInit	;wreg free
  2818   0016AC  0012               	return		;funcret
  2819   0016AE                     __end_of_dsInit:
  2820                           	callstack 0
  2821                           
  2822 ;; *************** function _i2cInit *****************
  2823 ;; Defined at:
  2824 ;;		line 14 in file "i2c.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      void 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2838 ;;      Params:         0       0       0       0       0       0       0       0       0
  2839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2841 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2842 ;;Total ram usage:        0 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; Hardware stack levels required when called: 1
  2845 ;; This function calls:
  2846 ;;		_pinMode
  2847 ;; This function is called by:
  2848 ;;		_dsInit
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text25
  2853   0015EE                     __ptext25:
  2854                           	callstack 0
  2855   0015EE                     _i2cInit:
  2856                           	callstack 28
  2857   0015EE                     
  2858                           ;i2c.c: 16:  pinMode(PIN_B0,1);
  2859   0015EE  0E00               	movlw	0
  2860   0015F0  6E02               	movwf	(pinMode@pin+1)^0,c
  2861   0015F2  0E08               	movlw	8
  2862   0015F4  6E01               	movwf	pinMode@pin^0,c
  2863   0015F6  0E00               	movlw	0
  2864   0015F8  6E04               	movwf	(pinMode@type+1)^0,c
  2865   0015FA  0E01               	movlw	1
  2866   0015FC  6E03               	movwf	pinMode@type^0,c
  2867   0015FE  EC28  F005         	call	_pinMode	;wreg free
  2868                           
  2869                           ;i2c.c: 17:  pinMode(PIN_B1,1);
  2870   001602  0E00               	movlw	0
  2871   001604  6E02               	movwf	(pinMode@pin+1)^0,c
  2872   001606  0E09               	movlw	9
  2873   001608  6E01               	movwf	pinMode@pin^0,c
  2874   00160A  0E00               	movlw	0
  2875   00160C  6E04               	movwf	(pinMode@type+1)^0,c
  2876   00160E  0E01               	movlw	1
  2877   001610  6E03               	movwf	pinMode@type^0,c
  2878   001612  EC28  F005         	call	_pinMode	;wreg free
  2879   001616  0012               	return		;funcret
  2880   001618                     __end_of_i2cInit:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function _pinMode *****************
  2884 ;; Defined at:
  2885 ;;		line 54 in file "io.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  pin             2    0[COMRAM] int 
  2888 ;;  type            2    2[COMRAM] int 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2900 ;;      Params:         4       0       0       0       0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2902 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2903 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2904 ;;Total ram usage:        6 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_i2cInit
  2910 ;;		_read_SCL
  2911 ;;		_read_SDA
  2912 ;;		_clear_SCL
  2913 ;;		_clear_SDA
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text26
  2918   000A50                     __ptext26:
  2919                           	callstack 0
  2920   000A50                     _pinMode:
  2921                           	callstack 26
  2922   000A50                     
  2923                           ;io.c: 56:     if(pin <8){
  2924   000A50  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2925   000A52  EF36  F005         	goto	u970
  2926   000A56  5002               	movf	(pinMode@pin+1)^0,w,c
  2927   000A58  E107               	bnz	u971
  2928   000A5A  0E08               	movlw	8
  2929   000A5C  5C01               	subwf	pinMode@pin^0,w,c
  2930   000A5E  B0D8               	btfsc	status,0,c
  2931   000A60  EF34  F005         	goto	u971
  2932   000A64  EF36  F005         	goto	u970
  2933   000A68                     u971:
  2934   000A68  EF60  F005         	goto	l1518
  2935   000A6C                     u970:
  2936   000A6C                     
  2937                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2938   000A6C  5003               	movf	pinMode@type^0,w,c
  2939   000A6E  1004               	iorwf	(pinMode@type+1)^0,w,c
  2940   000A70  B4D8               	btfsc	status,2,c
  2941   000A72  EF3D  F005         	goto	u981
  2942   000A76  EF3F  F005         	goto	u980
  2943   000A7A                     u981:
  2944   000A7A  EF4F  F005         	goto	l1516
  2945   000A7E                     u980:
  2946   000A7E  C001  F005         	movff	pinMode@pin,??_pinMode
  2947   000A82  0E01               	movlw	1
  2948   000A84  6E06               	movwf	(??_pinMode+1)^0,c
  2949   000A86  2A05               	incf	??_pinMode^0,f,c
  2950   000A88  EF48  F005         	goto	u994
  2951   000A8C                     u995:
  2952   000A8C  90D8               	bcf	status,0,c
  2953   000A8E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2954   000A90                     u994:
  2955   000A90  2E05               	decfsz	??_pinMode^0,f,c
  2956   000A92  EF46  F005         	goto	u995
  2957   000A96  5006               	movf	(??_pinMode+1)^0,w,c
  2958   000A98  1292               	iorwf	146,f,c	;volatile
  2959   000A9A  EF4E  F006         	goto	l296
  2960   000A9E                     l1516:
  2961   000A9E  C001  F005         	movff	pinMode@pin,??_pinMode
  2962   000AA2  0E01               	movlw	1
  2963   000AA4  6E06               	movwf	(??_pinMode+1)^0,c
  2964   000AA6  2A05               	incf	??_pinMode^0,f,c
  2965   000AA8  EF58  F005         	goto	u1004
  2966   000AAC                     u1005:
  2967   000AAC  90D8               	bcf	status,0,c
  2968   000AAE  3606               	rlcf	(??_pinMode+1)^0,f,c
  2969   000AB0                     u1004:
  2970   000AB0  2E05               	decfsz	??_pinMode^0,f,c
  2971   000AB2  EF56  F005         	goto	u1005
  2972   000AB6  5006               	movf	(??_pinMode+1)^0,w,c
  2973   000AB8  0AFF               	xorlw	255
  2974   000ABA  1692               	andwf	146,f,c	;volatile
  2975   000ABC  EF4E  F006         	goto	l296
  2976   000AC0                     l1518:
  2977   000AC0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2978   000AC2  EF6E  F005         	goto	u1010
  2979   000AC6  5002               	movf	(pinMode@pin+1)^0,w,c
  2980   000AC8  E107               	bnz	u1011
  2981   000ACA  0E10               	movlw	16
  2982   000ACC  5C01               	subwf	pinMode@pin^0,w,c
  2983   000ACE  B0D8               	btfsc	status,0,c
  2984   000AD0  EF6C  F005         	goto	u1011
  2985   000AD4  EF6E  F005         	goto	u1010
  2986   000AD8                     u1011:
  2987   000AD8  EF9C  F005         	goto	l1526
  2988   000ADC                     u1010:
  2989   000ADC                     
  2990                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2991   000ADC  5003               	movf	pinMode@type^0,w,c
  2992   000ADE  1004               	iorwf	(pinMode@type+1)^0,w,c
  2993   000AE0  B4D8               	btfsc	status,2,c
  2994   000AE2  EF75  F005         	goto	u1021
  2995   000AE6  EF77  F005         	goto	u1020
  2996   000AEA                     u1021:
  2997   000AEA  EF89  F005         	goto	l1524
  2998   000AEE                     u1020:
  2999   000AEE  C001  F005         	movff	pinMode@pin,??_pinMode
  3000   000AF2  0EF8               	movlw	-8
  3001   000AF4  2605               	addwf	??_pinMode^0,f,c
  3002   000AF6  0E01               	movlw	1
  3003   000AF8  6E06               	movwf	(??_pinMode+1)^0,c
  3004   000AFA  2A05               	incf	??_pinMode^0,f,c
  3005   000AFC  EF82  F005         	goto	u1034
  3006   000B00                     u1035:
  3007   000B00  90D8               	bcf	status,0,c
  3008   000B02  3606               	rlcf	(??_pinMode+1)^0,f,c
  3009   000B04                     u1034:
  3010   000B04  2E05               	decfsz	??_pinMode^0,f,c
  3011   000B06  EF80  F005         	goto	u1035
  3012   000B0A  5006               	movf	(??_pinMode+1)^0,w,c
  3013   000B0C  1293               	iorwf	147,f,c	;volatile
  3014   000B0E  EF4E  F006         	goto	l296
  3015   000B12                     l1524:
  3016   000B12  C001  F005         	movff	pinMode@pin,??_pinMode
  3017   000B16  0EF8               	movlw	-8
  3018   000B18  2605               	addwf	??_pinMode^0,f,c
  3019   000B1A  0E01               	movlw	1
  3020   000B1C  6E06               	movwf	(??_pinMode+1)^0,c
  3021   000B1E  2A05               	incf	??_pinMode^0,f,c
  3022   000B20  EF94  F005         	goto	u1044
  3023   000B24                     u1045:
  3024   000B24  90D8               	bcf	status,0,c
  3025   000B26  3606               	rlcf	(??_pinMode+1)^0,f,c
  3026   000B28                     u1044:
  3027   000B28  2E05               	decfsz	??_pinMode^0,f,c
  3028   000B2A  EF92  F005         	goto	u1045
  3029   000B2E  5006               	movf	(??_pinMode+1)^0,w,c
  3030   000B30  0AFF               	xorlw	255
  3031   000B32  1693               	andwf	147,f,c	;volatile
  3032   000B34  EF4E  F006         	goto	l296
  3033   000B38                     l1526:
  3034   000B38  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3035   000B3A  EFAA  F005         	goto	u1050
  3036   000B3E  5002               	movf	(pinMode@pin+1)^0,w,c
  3037   000B40  E107               	bnz	u1051
  3038   000B42  0E18               	movlw	24
  3039   000B44  5C01               	subwf	pinMode@pin^0,w,c
  3040   000B46  B0D8               	btfsc	status,0,c
  3041   000B48  EFA8  F005         	goto	u1051
  3042   000B4C  EFAA  F005         	goto	u1050
  3043   000B50                     u1051:
  3044   000B50  EFD8  F005         	goto	l1534
  3045   000B54                     u1050:
  3046   000B54                     
  3047                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3048   000B54  5003               	movf	pinMode@type^0,w,c
  3049   000B56  1004               	iorwf	(pinMode@type+1)^0,w,c
  3050   000B58  B4D8               	btfsc	status,2,c
  3051   000B5A  EFB1  F005         	goto	u1061
  3052   000B5E  EFB3  F005         	goto	u1060
  3053   000B62                     u1061:
  3054   000B62  EFC5  F005         	goto	l1532
  3055   000B66                     u1060:
  3056   000B66  C001  F005         	movff	pinMode@pin,??_pinMode
  3057   000B6A  0EF0               	movlw	-16
  3058   000B6C  2605               	addwf	??_pinMode^0,f,c
  3059   000B6E  0E01               	movlw	1
  3060   000B70  6E06               	movwf	(??_pinMode+1)^0,c
  3061   000B72  2A05               	incf	??_pinMode^0,f,c
  3062   000B74  EFBE  F005         	goto	u1074
  3063   000B78                     u1075:
  3064   000B78  90D8               	bcf	status,0,c
  3065   000B7A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3066   000B7C                     u1074:
  3067   000B7C  2E05               	decfsz	??_pinMode^0,f,c
  3068   000B7E  EFBC  F005         	goto	u1075
  3069   000B82  5006               	movf	(??_pinMode+1)^0,w,c
  3070   000B84  1294               	iorwf	148,f,c	;volatile
  3071   000B86  EF4E  F006         	goto	l296
  3072   000B8A                     l1532:
  3073   000B8A  C001  F005         	movff	pinMode@pin,??_pinMode
  3074   000B8E  0EF0               	movlw	-16
  3075   000B90  2605               	addwf	??_pinMode^0,f,c
  3076   000B92  0E01               	movlw	1
  3077   000B94  6E06               	movwf	(??_pinMode+1)^0,c
  3078   000B96  2A05               	incf	??_pinMode^0,f,c
  3079   000B98  EFD0  F005         	goto	u1084
  3080   000B9C                     u1085:
  3081   000B9C  90D8               	bcf	status,0,c
  3082   000B9E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3083   000BA0                     u1084:
  3084   000BA0  2E05               	decfsz	??_pinMode^0,f,c
  3085   000BA2  EFCE  F005         	goto	u1085
  3086   000BA6  5006               	movf	(??_pinMode+1)^0,w,c
  3087   000BA8  0AFF               	xorlw	255
  3088   000BAA  1694               	andwf	148,f,c	;volatile
  3089   000BAC  EF4E  F006         	goto	l296
  3090   000BB0                     l1534:
  3091   000BB0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3092   000BB2  EFE6  F005         	goto	u1090
  3093   000BB6  5002               	movf	(pinMode@pin+1)^0,w,c
  3094   000BB8  E107               	bnz	u1091
  3095   000BBA  0E20               	movlw	32
  3096   000BBC  5C01               	subwf	pinMode@pin^0,w,c
  3097   000BBE  B0D8               	btfsc	status,0,c
  3098   000BC0  EFE4  F005         	goto	u1091
  3099   000BC4  EFE6  F005         	goto	u1090
  3100   000BC8                     u1091:
  3101   000BC8  EF14  F006         	goto	l1542
  3102   000BCC                     u1090:
  3103   000BCC                     
  3104                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3105   000BCC  5003               	movf	pinMode@type^0,w,c
  3106   000BCE  1004               	iorwf	(pinMode@type+1)^0,w,c
  3107   000BD0  B4D8               	btfsc	status,2,c
  3108   000BD2  EFED  F005         	goto	u1101
  3109   000BD6  EFEF  F005         	goto	u1100
  3110   000BDA                     u1101:
  3111   000BDA  EF01  F006         	goto	l1540
  3112   000BDE                     u1100:
  3113   000BDE  C001  F005         	movff	pinMode@pin,??_pinMode
  3114   000BE2  0EE8               	movlw	-24
  3115   000BE4  2605               	addwf	??_pinMode^0,f,c
  3116   000BE6  0E01               	movlw	1
  3117   000BE8  6E06               	movwf	(??_pinMode+1)^0,c
  3118   000BEA  2A05               	incf	??_pinMode^0,f,c
  3119   000BEC  EFFA  F005         	goto	u1114
  3120   000BF0                     u1115:
  3121   000BF0  90D8               	bcf	status,0,c
  3122   000BF2  3606               	rlcf	(??_pinMode+1)^0,f,c
  3123   000BF4                     u1114:
  3124   000BF4  2E05               	decfsz	??_pinMode^0,f,c
  3125   000BF6  EFF8  F005         	goto	u1115
  3126   000BFA  5006               	movf	(??_pinMode+1)^0,w,c
  3127   000BFC  1295               	iorwf	149,f,c	;volatile
  3128   000BFE  EF4E  F006         	goto	l296
  3129   000C02                     l1540:
  3130   000C02  C001  F005         	movff	pinMode@pin,??_pinMode
  3131   000C06  0EE8               	movlw	-24
  3132   000C08  2605               	addwf	??_pinMode^0,f,c
  3133   000C0A  0E01               	movlw	1
  3134   000C0C  6E06               	movwf	(??_pinMode+1)^0,c
  3135   000C0E  2A05               	incf	??_pinMode^0,f,c
  3136   000C10  EF0C  F006         	goto	u1124
  3137   000C14                     u1125:
  3138   000C14  90D8               	bcf	status,0,c
  3139   000C16  3606               	rlcf	(??_pinMode+1)^0,f,c
  3140   000C18                     u1124:
  3141   000C18  2E05               	decfsz	??_pinMode^0,f,c
  3142   000C1A  EF0A  F006         	goto	u1125
  3143   000C1E  5006               	movf	(??_pinMode+1)^0,w,c
  3144   000C20  0AFF               	xorlw	255
  3145   000C22  1695               	andwf	149,f,c	;volatile
  3146   000C24  EF4E  F006         	goto	l296
  3147   000C28                     l1542:
  3148   000C28  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3149   000C2A  EF22  F006         	goto	u1130
  3150   000C2E  5002               	movf	(pinMode@pin+1)^0,w,c
  3151   000C30  E107               	bnz	u1131
  3152   000C32  0E28               	movlw	40
  3153   000C34  5C01               	subwf	pinMode@pin^0,w,c
  3154   000C36  B0D8               	btfsc	status,0,c
  3155   000C38  EF20  F006         	goto	u1131
  3156   000C3C  EF22  F006         	goto	u1130
  3157   000C40                     u1131:
  3158   000C40  EF4E  F006         	goto	l296
  3159   000C44                     u1130:
  3160   000C44                     
  3161                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3162   000C44  5003               	movf	pinMode@type^0,w,c
  3163   000C46  1004               	iorwf	(pinMode@type+1)^0,w,c
  3164   000C48  B4D8               	btfsc	status,2,c
  3165   000C4A  EF29  F006         	goto	u1141
  3166   000C4E  EF2B  F006         	goto	u1140
  3167   000C52                     u1141:
  3168   000C52  EF3D  F006         	goto	l1548
  3169   000C56                     u1140:
  3170   000C56  C001  F005         	movff	pinMode@pin,??_pinMode
  3171   000C5A  0EE0               	movlw	-32
  3172   000C5C  2605               	addwf	??_pinMode^0,f,c
  3173   000C5E  0E01               	movlw	1
  3174   000C60  6E06               	movwf	(??_pinMode+1)^0,c
  3175   000C62  2A05               	incf	??_pinMode^0,f,c
  3176   000C64  EF36  F006         	goto	u1154
  3177   000C68                     u1155:
  3178   000C68  90D8               	bcf	status,0,c
  3179   000C6A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3180   000C6C                     u1154:
  3181   000C6C  2E05               	decfsz	??_pinMode^0,f,c
  3182   000C6E  EF34  F006         	goto	u1155
  3183   000C72  5006               	movf	(??_pinMode+1)^0,w,c
  3184   000C74  1296               	iorwf	150,f,c	;volatile
  3185   000C76  EF4E  F006         	goto	l296
  3186   000C7A                     l1548:
  3187   000C7A  C001  F005         	movff	pinMode@pin,??_pinMode
  3188   000C7E  0EE0               	movlw	-32
  3189   000C80  2605               	addwf	??_pinMode^0,f,c
  3190   000C82  0E01               	movlw	1
  3191   000C84  6E06               	movwf	(??_pinMode+1)^0,c
  3192   000C86  2A05               	incf	??_pinMode^0,f,c
  3193   000C88  EF48  F006         	goto	u1164
  3194   000C8C                     u1165:
  3195   000C8C  90D8               	bcf	status,0,c
  3196   000C8E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3197   000C90                     u1164:
  3198   000C90  2E05               	decfsz	??_pinMode^0,f,c
  3199   000C92  EF46  F006         	goto	u1165
  3200   000C96  5006               	movf	(??_pinMode+1)^0,w,c
  3201   000C98  0AFF               	xorlw	255
  3202   000C9A  1696               	andwf	150,f,c	;volatile
  3203   000C9C                     l296:
  3204   000C9C  0012               	return		;funcret
  3205   000C9E                     __end_of_pinMode:
  3206                           	callstack 0
  3207                           
  3208 ;; *************** function _bcd2dec *****************
  3209 ;; Defined at:
  3210 ;;		line 14 in file "ds1307.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  value           2   32[COMRAM] int 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  2   32[COMRAM] int 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3224 ;;      Params:         2       0       0       0       0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3226 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3227 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3228 ;;Total ram usage:        4 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 1
  3231 ;; This function calls:
  3232 ;;		___awdiv
  3233 ;;		___wmul
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text27
  3240   00142C                     __ptext27:
  3241                           	callstack 0
  3242   00142C                     _bcd2dec:
  3243                           	callstack 29
  3244   00142C                     
  3245                           ;ds1307.c: 15:  return ((value / 16 * 10) + (value % 16));
  3246   00142C  0E0F               	movlw	15
  3247   00142E  1421               	andwf	bcd2dec@value^0,w,c
  3248   001430  6E23               	movwf	??_bcd2dec^0,c
  3249   001432  0E00               	movlw	0
  3250   001434  1422               	andwf	(bcd2dec@value+1)^0,w,c
  3251   001436  6E24               	movwf	(??_bcd2dec+1)^0,c
  3252   001438  0E00               	movlw	0
  3253   00143A  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3254   00143C  0E10               	movlw	16
  3255   00143E  6E15               	movwf	___awdiv@divisor^0,c
  3256   001440  C021  F013         	movff	bcd2dec@value,___awdiv@dividend
  3257   001444  C022  F014         	movff	bcd2dec@value+1,___awdiv@dividend+1
  3258   001448  ECF4  F007         	call	___awdiv	;wreg free
  3259   00144C  C013  F01B         	movff	?___awdiv,___wmul@multiplier
  3260   001450  C014  F01C         	movff	?___awdiv+1,___wmul@multiplier+1
  3261   001454  0E00               	movlw	0
  3262   001456  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
  3263   001458  0E0A               	movlw	10
  3264   00145A  6E1D               	movwf	___wmul@multiplicand^0,c
  3265   00145C  EC1F  F00B         	call	___wmul	;wreg free
  3266   001460  5023               	movf	??_bcd2dec^0,w,c
  3267   001462  241B               	addwf	?___wmul^0,w,c
  3268   001464  6E21               	movwf	?_bcd2dec^0,c
  3269   001466  5024               	movf	(??_bcd2dec+1)^0,w,c
  3270   001468  201C               	addwfc	(?___wmul+1)^0,w,c
  3271   00146A  6E22               	movwf	(?_bcd2dec+1)^0,c
  3272   00146C  0012               	return		;funcret
  3273   00146E                     __end_of_bcd2dec:
  3274                           	callstack 0
  3275                           
  3276 ;; *************** function ___wmul *****************
  3277 ;; Defined at:
  3278 ;;		line 15 in file "/opt/microchip/xc8/v2.46/pic/sources/c99/common/Umul16.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  multiplier      2   26[COMRAM] unsigned int 
  3281 ;;  multiplicand    2   28[COMRAM] unsigned int 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  product         2   30[COMRAM] unsigned int 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  2   26[COMRAM] unsigned int 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0, prodl, prodh
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3293 ;;      Params:         4       0       0       0       0       0       0       0       0
  3294 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3296 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3297 ;;Total ram usage:        6 bytes
  3298 ;; Hardware stack levels used: 1
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_bcd2dec
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text28
  3307   00163E                     __ptext28:
  3308                           	callstack 0
  3309   00163E                     ___wmul:
  3310                           	callstack 29
  3311   00163E  501B               	movf	___wmul@multiplier^0,w,c
  3312   001640  021D               	mulwf	___wmul@multiplicand^0,c
  3313   001642  CFF3 F01F          	movff	prodl,___wmul@product
  3314   001646  CFF4 F020          	movff	prodh,___wmul@product+1
  3315   00164A  501B               	movf	___wmul@multiplier^0,w,c
  3316   00164C  021E               	mulwf	(___wmul@multiplicand+1)^0,c
  3317   00164E  50F3               	movf	243,w,c
  3318   001650  2620               	addwf	(___wmul@product+1)^0,f,c
  3319   001652  501C               	movf	(___wmul@multiplier+1)^0,w,c
  3320   001654  021D               	mulwf	___wmul@multiplicand^0,c
  3321   001656  50F3               	movf	243,w,c
  3322   001658  2620               	addwf	(___wmul@product+1)^0,f,c
  3323   00165A  C01F  F01B         	movff	___wmul@product,?___wmul
  3324   00165E  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  3325   001662  0012               	return		;funcret
  3326   001664                     __end_of___wmul:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function ___awdiv *****************
  3330 ;; Defined at:
  3331 ;;		line 7 in file "/opt/microchip/xc8/v2.46/pic/sources/c99/common/awdiv.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  dividend        2   18[COMRAM] int 
  3334 ;;  divisor         2   20[COMRAM] int 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  quotient        2   24[COMRAM] int 
  3337 ;;  sign            1   23[COMRAM] unsigned char 
  3338 ;;  counter         1   22[COMRAM] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  2   18[COMRAM] int 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3348 ;;      Params:         4       0       0       0       0       0       0       0       0
  3349 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3351 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3352 ;;Total ram usage:        8 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;;		_bcd2dec
  3359 ;;		_lcdInt
  3360 ;;		_dec2bcd
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text29
  3365   000FE8                     __ptext29:
  3366                           	callstack 0
  3367   000FE8                     ___awdiv:
  3368                           	callstack 29
  3369   000FE8  0E00               	movlw	0
  3370   000FEA  6E18               	movwf	___awdiv@sign^0,c
  3371   000FEC  BE16               	btfsc	(___awdiv@divisor+1)^0,7,c
  3372   000FEE  EFFD  F007         	goto	u1750
  3373   000FF2  EFFB  F007         	goto	u1751
  3374   000FF6                     u1751:
  3375   000FF6  EF03  F008         	goto	l1856
  3376   000FFA                     u1750:
  3377   000FFA  6C15               	negf	___awdiv@divisor^0,c
  3378   000FFC  1E16               	comf	(___awdiv@divisor+1)^0,f,c
  3379   000FFE  B0D8               	btfsc	status,0,c
  3380   001000  2A16               	incf	(___awdiv@divisor+1)^0,f,c
  3381   001002  0E01               	movlw	1
  3382   001004  6E18               	movwf	___awdiv@sign^0,c
  3383   001006                     l1856:
  3384   001006  BE14               	btfsc	(___awdiv@dividend+1)^0,7,c
  3385   001008  EF0A  F008         	goto	u1760
  3386   00100C  EF08  F008         	goto	u1761
  3387   001010                     u1761:
  3388   001010  EF10  F008         	goto	l1862
  3389   001014                     u1760:
  3390   001014  6C13               	negf	___awdiv@dividend^0,c
  3391   001016  1E14               	comf	(___awdiv@dividend+1)^0,f,c
  3392   001018  B0D8               	btfsc	status,0,c
  3393   00101A  2A14               	incf	(___awdiv@dividend+1)^0,f,c
  3394   00101C  0E01               	movlw	1
  3395   00101E  1A18               	xorwf	___awdiv@sign^0,f,c
  3396   001020                     l1862:
  3397   001020  0E00               	movlw	0
  3398   001022  6E1A               	movwf	(___awdiv@quotient+1)^0,c
  3399   001024  0E00               	movlw	0
  3400   001026  6E19               	movwf	___awdiv@quotient^0,c
  3401   001028  5015               	movf	___awdiv@divisor^0,w,c
  3402   00102A  1016               	iorwf	(___awdiv@divisor+1)^0,w,c
  3403   00102C  B4D8               	btfsc	status,2,c
  3404   00102E  EF1B  F008         	goto	u1771
  3405   001032  EF1D  F008         	goto	u1770
  3406   001036                     u1771:
  3407   001036  EF45  F008         	goto	l1884
  3408   00103A                     u1770:
  3409   00103A  0E01               	movlw	1
  3410   00103C  6E17               	movwf	___awdiv@counter^0,c
  3411   00103E  EF25  F008         	goto	l1870
  3412   001042                     l1868:
  3413   001042  90D8               	bcf	status,0,c
  3414   001044  3615               	rlcf	___awdiv@divisor^0,f,c
  3415   001046  3616               	rlcf	(___awdiv@divisor+1)^0,f,c
  3416   001048  2A17               	incf	___awdiv@counter^0,f,c
  3417   00104A                     l1870:
  3418   00104A  AE16               	btfss	(___awdiv@divisor+1)^0,7,c
  3419   00104C  EF2A  F008         	goto	u1781
  3420   001050  EF2C  F008         	goto	u1780
  3421   001054                     u1781:
  3422   001054  EF21  F008         	goto	l1868
  3423   001058                     u1780:
  3424   001058                     l1872:
  3425   001058  90D8               	bcf	status,0,c
  3426   00105A  3619               	rlcf	___awdiv@quotient^0,f,c
  3427   00105C  361A               	rlcf	(___awdiv@quotient+1)^0,f,c
  3428   00105E  5015               	movf	___awdiv@divisor^0,w,c
  3429   001060  5C13               	subwf	___awdiv@dividend^0,w,c
  3430   001062  5016               	movf	(___awdiv@divisor+1)^0,w,c
  3431   001064  5814               	subwfb	(___awdiv@dividend+1)^0,w,c
  3432   001066  A0D8               	btfss	status,0,c
  3433   001068  EF38  F008         	goto	u1791
  3434   00106C  EF3A  F008         	goto	u1790
  3435   001070                     u1791:
  3436   001070  EF3F  F008         	goto	l1880
  3437   001074                     u1790:
  3438   001074  5015               	movf	___awdiv@divisor^0,w,c
  3439   001076  5E13               	subwf	___awdiv@dividend^0,f,c
  3440   001078  5016               	movf	(___awdiv@divisor+1)^0,w,c
  3441   00107A  5A14               	subwfb	(___awdiv@dividend+1)^0,f,c
  3442   00107C  8019               	bsf	___awdiv@quotient^0,0,c
  3443   00107E                     l1880:
  3444   00107E  90D8               	bcf	status,0,c
  3445   001080  3216               	rrcf	(___awdiv@divisor+1)^0,f,c
  3446   001082  3215               	rrcf	___awdiv@divisor^0,f,c
  3447   001084  2E17               	decfsz	___awdiv@counter^0,f,c
  3448   001086  EF2C  F008         	goto	l1872
  3449   00108A                     l1884:
  3450   00108A  5018               	movf	___awdiv@sign^0,w,c
  3451   00108C  B4D8               	btfsc	status,2,c
  3452   00108E  EF4B  F008         	goto	u1801
  3453   001092  EF4D  F008         	goto	u1800
  3454   001096                     u1801:
  3455   001096  EF51  F008         	goto	l1888
  3456   00109A                     u1800:
  3457   00109A  6C19               	negf	___awdiv@quotient^0,c
  3458   00109C  1E1A               	comf	(___awdiv@quotient+1)^0,f,c
  3459   00109E  B0D8               	btfsc	status,0,c
  3460   0010A0  2A1A               	incf	(___awdiv@quotient+1)^0,f,c
  3461   0010A2                     l1888:
  3462   0010A2  C019  F013         	movff	___awdiv@quotient,?___awdiv
  3463   0010A6  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  3464   0010AA  0012               	return		;funcret
  3465   0010AC                     __end_of___awdiv:
  3466                           	callstack 0
  3467                           
  3468 ;; *************** function ___awmod *****************
  3469 ;; Defined at:
  3470 ;;		line 7 in file "/opt/microchip/xc8/v2.46/pic/sources/c99/common/awmod.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  dividend        2   36[COMRAM] int 
  3473 ;;  divisor         2   38[COMRAM] int 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;  sign            1   41[COMRAM] unsigned char 
  3476 ;;  counter         1   40[COMRAM] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  2   36[COMRAM] int 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3486 ;;      Params:         4       0       0       0       0       0       0       0       0
  3487 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3489 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3490 ;;Total ram usage:        6 bytes
  3491 ;; Hardware stack levels used: 1
  3492 ;; This function calls:
  3493 ;;		Nothing
  3494 ;; This function is called by:
  3495 ;;		_main
  3496 ;;		_lcdInt
  3497 ;;		_dec2bcd
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text30
  3502   0010AC                     __ptext30:
  3503                           	callstack 0
  3504   0010AC                     ___awmod:
  3505                           	callstack 30
  3506   0010AC  0E00               	movlw	0
  3507   0010AE  6E2A               	movwf	___awmod@sign^0,c
  3508   0010B0  BE26               	btfsc	(___awmod@dividend+1)^0,7,c
  3509   0010B2  EF5F  F008         	goto	u1820
  3510   0010B6  EF5D  F008         	goto	u1821
  3511   0010BA                     u1821:
  3512   0010BA  EF65  F008         	goto	l1928
  3513   0010BE                     u1820:
  3514   0010BE  6C25               	negf	___awmod@dividend^0,c
  3515   0010C0  1E26               	comf	(___awmod@dividend+1)^0,f,c
  3516   0010C2  B0D8               	btfsc	status,0,c
  3517   0010C4  2A26               	incf	(___awmod@dividend+1)^0,f,c
  3518   0010C6  0E01               	movlw	1
  3519   0010C8  6E2A               	movwf	___awmod@sign^0,c
  3520   0010CA                     l1928:
  3521   0010CA  BE28               	btfsc	(___awmod@divisor+1)^0,7,c
  3522   0010CC  EF6C  F008         	goto	u1830
  3523   0010D0  EF6A  F008         	goto	u1831
  3524   0010D4                     u1831:
  3525   0010D4  EF70  F008         	goto	l1932
  3526   0010D8                     u1830:
  3527   0010D8  6C27               	negf	___awmod@divisor^0,c
  3528   0010DA  1E28               	comf	(___awmod@divisor+1)^0,f,c
  3529   0010DC  B0D8               	btfsc	status,0,c
  3530   0010DE  2A28               	incf	(___awmod@divisor+1)^0,f,c
  3531   0010E0                     l1932:
  3532   0010E0  5027               	movf	___awmod@divisor^0,w,c
  3533   0010E2  1028               	iorwf	(___awmod@divisor+1)^0,w,c
  3534   0010E4  B4D8               	btfsc	status,2,c
  3535   0010E6  EF77  F008         	goto	u1841
  3536   0010EA  EF79  F008         	goto	u1840
  3537   0010EE                     u1841:
  3538   0010EE  EF9D  F008         	goto	l1948
  3539   0010F2                     u1840:
  3540   0010F2  0E01               	movlw	1
  3541   0010F4  6E29               	movwf	___awmod@counter^0,c
  3542   0010F6  EF81  F008         	goto	l1938
  3543   0010FA                     l1936:
  3544   0010FA  90D8               	bcf	status,0,c
  3545   0010FC  3627               	rlcf	___awmod@divisor^0,f,c
  3546   0010FE  3628               	rlcf	(___awmod@divisor+1)^0,f,c
  3547   001100  2A29               	incf	___awmod@counter^0,f,c
  3548   001102                     l1938:
  3549   001102  AE28               	btfss	(___awmod@divisor+1)^0,7,c
  3550   001104  EF86  F008         	goto	u1851
  3551   001108  EF88  F008         	goto	u1850
  3552   00110C                     u1851:
  3553   00110C  EF7D  F008         	goto	l1936
  3554   001110                     u1850:
  3555   001110                     l1940:
  3556   001110  5027               	movf	___awmod@divisor^0,w,c
  3557   001112  5C25               	subwf	___awmod@dividend^0,w,c
  3558   001114  5028               	movf	(___awmod@divisor+1)^0,w,c
  3559   001116  5826               	subwfb	(___awmod@dividend+1)^0,w,c
  3560   001118  A0D8               	btfss	status,0,c
  3561   00111A  EF91  F008         	goto	u1861
  3562   00111E  EF93  F008         	goto	u1860
  3563   001122                     u1861:
  3564   001122  EF97  F008         	goto	l1944
  3565   001126                     u1860:
  3566   001126  5027               	movf	___awmod@divisor^0,w,c
  3567   001128  5E25               	subwf	___awmod@dividend^0,f,c
  3568   00112A  5028               	movf	(___awmod@divisor+1)^0,w,c
  3569   00112C  5A26               	subwfb	(___awmod@dividend+1)^0,f,c
  3570   00112E                     l1944:
  3571   00112E  90D8               	bcf	status,0,c
  3572   001130  3228               	rrcf	(___awmod@divisor+1)^0,f,c
  3573   001132  3227               	rrcf	___awmod@divisor^0,f,c
  3574   001134  2E29               	decfsz	___awmod@counter^0,f,c
  3575   001136  EF88  F008         	goto	l1940
  3576   00113A                     l1948:
  3577   00113A  502A               	movf	___awmod@sign^0,w,c
  3578   00113C  B4D8               	btfsc	status,2,c
  3579   00113E  EFA3  F008         	goto	u1871
  3580   001142  EFA5  F008         	goto	u1870
  3581   001146                     u1871:
  3582   001146  EFA9  F008         	goto	l1952
  3583   00114A                     u1870:
  3584   00114A  6C25               	negf	___awmod@dividend^0,c
  3585   00114C  1E26               	comf	(___awmod@dividend+1)^0,f,c
  3586   00114E  B0D8               	btfsc	status,0,c
  3587   001150  2A26               	incf	(___awmod@dividend+1)^0,f,c
  3588   001152                     l1952:
  3589   001152  C025  F025         	movff	___awmod@dividend,?___awmod
  3590   001156  C026  F026         	movff	___awmod@dividend+1,?___awmod+1
  3591   00115A  0012               	return		;funcret
  3592   00115C                     __end_of___awmod:
  3593                           	callstack 0
  3594                           
  3595                           	psect	smallconst
  3596   000800                     __psmallconst:
  3597                           	callstack 0
  3598   000800  00                 	db	0
  3599   000801  00                 	db	0	; dummy byte at the end
  3600   000000                     
  3601                           	psect	rparam
  3602   000000                     
  3603                           	psect	config
  3604                           
  3605                           ;Config register CONFIG1L @ 0x300000
  3606                           ;	unspecified, using default values
  3607                           ;	PLL Prescaler Selection bits
  3608                           ;	PLLDIV = 0x0, unprogrammed default
  3609                           ;	System Clock Postscaler Selection bits
  3610                           ;	CPUDIV = 0x0, unprogrammed default
  3611                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3612                           ;	USBDIV = 0x0, unprogrammed default
  3613   300000                     	org	3145728
  3614   300000  00                 	db	0
  3615                           
  3616                           ;Config register CONFIG1H @ 0x300001
  3617                           ;	Oscillator Selection bits
  3618                           ;	FOSC = HS, HS oscillator (HS)
  3619                           ;	Fail-Safe Clock Monitor Enable bit
  3620                           ;	FCMEN = 0x0, unprogrammed default
  3621                           ;	Internal/External Oscillator Switchover bit
  3622                           ;	IESO = 0x0, unprogrammed default
  3623   300001                     	org	3145729
  3624   300001  0C                 	db	12
  3625                           
  3626                           ;Config register CONFIG2L @ 0x300002
  3627                           ;	unspecified, using default values
  3628                           ;	Power-up Timer Enable bit
  3629                           ;	PWRT = 0x1, unprogrammed default
  3630                           ;	Brown-out Reset Enable bits
  3631                           ;	BOR = 0x3, unprogrammed default
  3632                           ;	Brown-out Reset Voltage bits
  3633                           ;	BORV = 0x3, unprogrammed default
  3634                           ;	USB Voltage Regulator Enable bit
  3635                           ;	VREGEN = 0x0, unprogrammed default
  3636   300002                     	org	3145730
  3637   300002  1F                 	db	31
  3638                           
  3639                           ;Config register CONFIG2H @ 0x300003
  3640                           ;	Watchdog Timer Enable bit
  3641                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3642                           ;	Watchdog Timer Postscale Select bits
  3643                           ;	WDTPS = 0xF, unprogrammed default
  3644   300003                     	org	3145731
  3645   300003  1E                 	db	30
  3646                           
  3647                           ; Padding undefined space
  3648   300004                     	org	3145732
  3649   300004  FF                 	db	255
  3650                           
  3651                           ;Config register CONFIG3H @ 0x300005
  3652                           ;	CCP2 MUX bit
  3653                           ;	CCP2MX = 0x1, unprogrammed default
  3654                           ;	PORTB A/D Enable bit
  3655                           ;	PBADEN = 0x1, unprogrammed default
  3656                           ;	Low-Power Timer 1 Oscillator Enable bit
  3657                           ;	LPT1OSC = 0x0, unprogrammed default
  3658                           ;	MCLR Pin Enable bit
  3659                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3660   300005                     	org	3145733
  3661   300005  83                 	db	131
  3662                           
  3663                           ;Config register CONFIG4L @ 0x300006
  3664                           ;	Stack Full/Underflow Reset Enable bit
  3665                           ;	STVREN = 0x1, unprogrammed default
  3666                           ;	Single-Supply ICSP Enable bit
  3667                           ;	LVP = OFF, Single-Supply ICSP disabled
  3668                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3669                           ;	ICPRT = 0x0, unprogrammed default
  3670                           ;	Extended Instruction Set Enable bit
  3671                           ;	XINST = 0x0, unprogrammed default
  3672                           ;	Background Debugger Enable bit
  3673                           ;	DEBUG = 0x1, unprogrammed default
  3674   300006                     	org	3145734
  3675   300006  81                 	db	129
  3676                           
  3677                           ; Padding undefined space
  3678   300007                     	org	3145735
  3679   300007  FF                 	db	255
  3680                           tosu	equ	0xFFF
  3681                           tosh	equ	0xFFE
  3682                           tosl	equ	0xFFD
  3683                           stkptr	equ	0xFFC
  3684                           pclatu	equ	0xFFB
  3685                           pclath	equ	0xFFA
  3686                           pcl	equ	0xFF9
  3687                           tblptru	equ	0xFF8
  3688                           tblptrh	equ	0xFF7
  3689                           tblptrl	equ	0xFF6
  3690                           tablat	equ	0xFF5
  3691                           prodh	equ	0xFF4
  3692                           prodl	equ	0xFF3
  3693                           indf0	equ	0xFEF
  3694                           postinc0	equ	0xFEE
  3695                           postdec0	equ	0xFED
  3696                           preinc0	equ	0xFEC
  3697                           plusw0	equ	0xFEB
  3698                           fsr0h	equ	0xFEA
  3699                           fsr0l	equ	0xFE9
  3700                           wreg	equ	0xFE8
  3701                           indf1	equ	0xFE7
  3702                           postinc1	equ	0xFE6
  3703                           postdec1	equ	0xFE5
  3704                           preinc1	equ	0xFE4
  3705                           plusw1	equ	0xFE3
  3706                           fsr1h	equ	0xFE2
  3707                           fsr1l	equ	0xFE1
  3708                           bsr	equ	0xFE0
  3709                           indf2	equ	0xFDF
  3710                           postinc2	equ	0xFDE
  3711                           postdec2	equ	0xFDD
  3712                           preinc2	equ	0xFDC
  3713                           plusw2	equ	0xFDB
  3714                           fsr2h	equ	0xFDA
  3715                           fsr2l	equ	0xFD9
  3716                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awmod
    _lcdInit->_lcdCommand
    _lcdCommand->_Delay2ms
    _lcdCommand->_lcdCommand4bits
    _lcdData->_lcdCommand4bits
    _dsStartClock->_dsReadData
    _dsWriteData->_i2cWriteByte
    _dsReadData->_i2cReadByte
    _i2cWriteByte->_i2c_read_bit
    _i2cWriteByte->_i2c_write_bit
    _i2cReadByte->_i2c_read_bit
    _i2cReadByte->_i2c_write_bit
    _clear_SDA->_digitalWrite
    _clear_SDA->_pinMode
    _read_SDA->_pinMode
    _read_SCL->_pinMode
    _clear_SCL->_digitalWrite
    _clear_SCL->_pinMode
    _i2cInit->_pinMode
    _bcd2dec->___wmul
    ___wmul->___awdiv
    ___awdiv->_dsReadData
    ___awmod->_bcd2dec

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  161123
                                             42 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                            _bcd2dec
                             _dsInit
                         _dsReadData
                       _dsStartClock
                        _dsWriteData
                         _lcdCommand
                            _lcdData
                            _lcdInit
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              1     1      0    1800
                                              3 COMRAM     1     1      0
                           _Delay2ms
                         _lcdCommand
                    _lcdCommand4bits
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0     944
                                              2 COMRAM     1     1      0
                           _Delay2ms
                          _Delay40us
                    _lcdCommand4bits
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             2     2      0      92
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcdData                                              1     1      0     808
                                              2 COMRAM     1     1      0
                          _Delay40us
                    _lcdCommand4bits
 ---------------------------------------------------------------------------------
 (2) _lcdCommand4bits                                      2     1      1     718
                                              0 COMRAM     2     1      1
                        _pulseEnable
 ---------------------------------------------------------------------------------
 (3) _pulseEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _dsStartClock                                         2     2      0   74953
                                             18 COMRAM     2     2      0
                         _dsReadData
                        _dsWriteData
 ---------------------------------------------------------------------------------
 (1) _dsWriteData                                          3     1      2   27839
                                             11 COMRAM     3     1      2
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (2) _dsReadData                                           5     3      2   47091
                                             13 COMRAM     5     3      2
                        _i2cReadByte
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (2) _i2cWriteByte                                         5     3      2   27491
                                              7 COMRAM     4     2      2
                       _i2c_read_bit
                          _i2c_start
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0    7648
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (3) _i2cReadByte                                          6     5      1   19023
                                              7 COMRAM     6     5      1
                       _i2c_read_bit
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (3) _i2c_write_bit                                        1     1      0    7692
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0    5548
                          _I2C_delay
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _clear_SDA                                            0     0      0    2100
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _i2c_read_bit                                         1     1      0    5571
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _read_SDA                                             0     0      0    1724
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (4) _read_SCL                                             0     0      0    1724
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _clear_SCL                                            0     0      0    2100
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _digitalWrite                                         6     2      4     748
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2C_delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (1) _dsInit                                               0     0      0    1352
                            _i2cInit
 ---------------------------------------------------------------------------------
 (2) _i2cInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _bcd2dec                                              4     2      2    2479
                                             32 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                             26 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1668
                                             18 COMRAM     8     4      4
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    2120
                                             36 COMRAM     6     2      4
                            ___awdiv (ARG)
                            _bcd2dec (ARG)
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     _dsReadData (ARG)
       _i2cReadByte
         _i2c_read_bit
           _I2C_delay
           _clear_SCL
             _digitalWrite
             _pinMode
           _read_SCL
             _digitalRead
             _pinMode
           _read_SDA
             _digitalRead
             _pinMode
         _i2c_stop
           _I2C_delay
           _clear_SDA
             _digitalWrite
             _pinMode
           _read_SCL
           _read_SDA
         _i2c_write_bit
           _I2C_delay
           _clear_SCL
           _clear_SDA
           _read_SCL
           _read_SDA
       _i2cWriteByte
         _i2c_read_bit
         _i2c_start
           _I2C_delay
           _clear_SCL
           _clear_SDA
           _read_SCL
           _read_SDA
         _i2c_stop
         _i2c_write_bit
   ___awmod
     ___awdiv (ARG)
     _bcd2dec (ARG)
       ___awdiv
       ___wmul
         ___awdiv (ARG)
       _dsReadData (ARG)
     _dsReadData (ARG)
   _bcd2dec
   _dsInit
     _i2cInit
       _pinMode
   _dsReadData
   _dsStartClock
     _dsReadData
     _dsWriteData
       _i2cWriteByte
   _dsWriteData
   _lcdCommand
     _Delay2ms
     _Delay40us
     _lcdCommand4bits
       _pulseEnable
   _lcdData
     _Delay40us
     _lcdCommand4bits
   _lcdInit
     _Delay2ms
     _lcdCommand
     _lcdCommand4bits

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      32        0.0%
BIGRAM             3EE      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK3            EF      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      2D       1       47.4%
BITBIGSFRlll        20      0       0      30        0.0%
BITBIGSFR_1h        12      0       0      23        0.0%
BITBIGSFRlh          D      0       0      29        0.0%
BITBIGSFR_1lhll      C      0       0      26        0.0%
BITBIGSFR_5          C      0       0      19        0.0%
BITBIGSFR_1lhhh      8      0       0      24        0.0%
BITBIGSFR_1lhhl      7      0       0      25        0.0%
BITBIGSFR_2          6      0       0      22        0.0%
BITBIGSFRh           5      0       0      28        0.0%
BITBIGSFR_4          3      0       0      20        0.0%
BITBIGSFR_3          3      0       0      21        0.0%
BITBIGSFR_1ll        1      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      31        0.0%
DATA                 0      0      2D      34        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 14 16:36:02 2024

                     l73 153C                       l66 1698                       l76 16A6  
                     l96 139E                       l89 124A                       l99 1680  
           ___awdiv@sign 0018      ___wmul@multiplicand 001D            ??_i2cReadByte 0009  
  i2cWriteByte@send_stop 0008           i2cReadByte@bit 000B                      l104 11D2  
                    l201 1302                      l130 146C                      l220 1356  
                    l133 16AC                      l214 12AA                      l142 13E4  
                    l207 150E                      l160 1616                      l136 163C  
                    l163 16AE                      l139 156A                      l172 15EC  
                    l262 0A4E                      l166 14DC                      l271 0FE2  
                    l175 15C2                      l192 1598                      l169 14A4  
                    l185 142A                      l530 10AA                      l266 0FE6  
                    l267 0FE2                      l543 115A                      l296 0C9C  
                    l299 1662                      u970 0A6C                      u971 0A68  
                    u980 0A7E                      u981 0A7A                      u994 0A90  
                    u995 0A8C             ___awmod@sign 002A         i2c_write_bit@bit 0007  
          ?_i2cWriteByte 0008   i2cWriteByte@send_start 000A          i2cReadByte@nack 000A  
        i2cReadByte@byte 000D                     l1510 0A50                     l1520 0ADC  
                   l1512 0A6C                     l1600 08A8                     l1530 0B66  
                   l1522 0AEE                     l1514 0A7E                     l1610 0940  
                   l1602 08C8                     l1540 0C02                     l1532 0B8A  
                   l1524 0B12                     l1516 0A9E                     l1620 09DA  
                   l1612 0962                     l1604 08EA                     l1700 14E6  
                   l1542 0C28                     l1534 0BB0                     l1526 0B38  
                   l1518 0AC0                     l1622 09F6                     l1614 097E  
                   l1606 0906                     l1550 0E7E                     l1702 14FA  
                   l1544 0C44                     l1536 0BCC                     l1528 0B54  
                   l1624 0A10                     l1616 0998                     l1608 0920  
                   l1560 0EDE                     l1552 0E9A                     l1632 146E  
                   l1704 1500                     l1800 1306                     l1720 1688  
                   l1712 1682                     l1640 16A2                     l1546 0C56  
                   l1538 0BDE                     l1626 0A30                     l1618 09B8  
                   l1706 1504                     l1810 1324                     l1650 1412  
                   l1642 13E6                     l1722 1510                     l1548 0C7A  
                   l1636 15C4                     l1628 14A6                     l1708 150C  
                   l1812 133A                     l1660 1426                     l1644 13F6  
                   l1652 1416                     l1740 152C                     l1900 116C  
                   l1590 081E                     l1582 0F9A                     l1574 0F52  
                   l1566 0F0A                     l1558 0EC2                     l1638 159A  
                   l1670 158C                     l1662 156C                     l1814 1340  
                   l1806 1312                     l1654 141A                     l1646 13FA  
                   l1822 1540                     l1910 1618                     l1718 1686  
                   l1750 11FC                     l1742 11D6                     l1734 1518  
                   l1830 1392                     l1902 1170                     l1920 10AC  
                   l1840 15EE                     l1592 0830                     l1584 0FB6  
                   l1576 0F6E                     l1568 0F26                     l1672 1590  
                   l1664 1570                     l1680 12C6                     l1816 1350  
                   l1808 1320                     l1656 141E                     l1648 13FE  
                   l1760 121A                     l1752 1202                     l1744 11E6  
                   l1736 151A                     l1728 1514                     l1832 139A  
                   l1824 135A                     l1904 1172                     l1930 10D8  
                   l1922 10B0                     l1850 0FEC                     l1842 163E  
                   l1914 142C                     l1594 0850                     l1674 1594  
                   l1666 1574                     l1690 12F6                     l1682 12CA  
                   l1818 1354                     l1658 1422                     l1834 13A0  
                   l1770 1244                     l1762 1228                     l1754 1204  
                   l1746 11EC                     l1738 152A                     l1826 1370  
                   l1906 1182                     l1940 1110                     l1932 10E0  
                   l1924 10BE                     l1860 101C                     l1852 0FFA  
                   l1844 165A                     l1908 16A8                     l1596 0872  
                   l1588 0802                     l1668 1588                     l1692 12FA  
                   l1684 12CE                     l1676 12AE                     l1836 13DC  
                   l1772 1246                     l1764 122E                     l1756 1212  
                   l1748 11EE                     l1828 1382                     l1950 114A  
                   l1942 1126                     l1934 10F2                     l1926 10C6  
                   l1870 104A                     l1862 1020                     l1854 1002  
                   l1598 088E                     l1694 12FE                     l1686 12E2  
                   l1678 12BE                     l1790 1282                     l1774 124E  
                   l1766 1230                     l1758 1218                     l1918 1666  
                   l1952 1152                     l1944 112E                     l1936 10FA  
                   l1928 10CA                     l1880 107E                     l1872 1058  
                   l1864 1028                     l1856 1006                     l1848 0FE8  
                   l1696 14DE                     l1688 12F2                     l1792 1292  
                   l1784 1266                     l1776 125E                     l1768 123E  
                   l1960 0CA6                     l1946 1134                     l1938 1102  
                   l1882 1084                     l1874 105E                     l1866 103A  
                   l1858 1014                     l1698 14E2                     l1794 1296  
                   l1786 127C                     l1778 1262                     l1970 0CD8  
                   l1962 0CAA                     l1948 113A                     l1876 1074  
                   l1868 1042                     l1884 108A                     l1796 12A6  
                   l1788 1280                     l1892 115C                     l1980 0D68  
                   l1972 0CDE                     l1964 0CB8                     l1956 0C9E  
                   l1886 109A                     l1878 107C                     l1894 1168  
                   l1990 0E12                     l1982 0D88                     l1974 0CFE  
                   l1966 0CC6                     l1958 0CA2                     l1888 10A2  
                   l1992 0E42                     l1984 0DB8                     l1976 0D2E  
                   l1968 0CD4                     l1986 0DEC                     l1978 0D62  
                   l1988 0DF2                     u1010 0ADC                     u1011 0AD8  
                   u1100 0BDE                     u1020 0AEE                     u1004 0AB0  
                   u1101 0BDA                     u1021 0AEA                     u1005 0AAC  
                   u1130 0C44                     u1114 0BF4                     u1050 0B54  
                   u1034 0B04                     u1210 0F26                     u1131 0C40  
                   u1115 0BF0                     u1051 0B50                     u1035 0B00  
                   u1211 0F22                     u1140 0C56                     u1124 0C18  
                   u1060 0B66                     u1044 0B28                     u1204 0EF4  
                   u1141 0C52                     u1125 0C14                     u1061 0B62  
                   u1045 0B24                     u1205 0EF0                     u1310 088E  
                   u1230 0F6E                     u1311 088A                     u1231 0F6A  
                   u1400 0998                     u1320 08A8                     u1304 0862  
                   u1224 0F3C                     u1401 0994                     u1321 08A4  
                   u1305 085E                     u1225 0F38                     u1154 0C6C  
                   u1090 0BCC                     u1074 0B7C                     u1250 0FB6  
                   u1170 0E9A                     u1155 0C68                     u1091 0BC8  
                   u1075 0B78                     u1251 0FB2                     u1171 0E96  
                   u1164 0C90                     u1084 0BA0                     u1244 0F84  
                   u1500 14A4                     u1165 0C8C                     u1085 0B9C  
                   u1245 0F80                     u1430 09F6                     u1414 09AA  
                   u1350 0906                     u1334 08BA                     u1270 081E  
                   u1190 0EDE                     u1510 13F6                     u1431 09F2  
                   u1415 09A6                     u1351 0902                     u1335 08B6  
                   u1271 081A                     u1191 0EDA                     u1511 13F2  
                   u1440 0A10                     u1424 09CA                     u1360 0920  
                   u1344 08DA                     u1280 0830                     u1264 0FCC  
                   u1184 0EAC                     u1520 1412                     u1600 153C  
                   u1441 0A0C                     u1425 09C6                     u1361 091C  
                   u1345 08D6                     u1281 082C                     u1265 0FC8  
                   u1185 0EA8                     u1521 140E                     u1601 1538  
                   u1530 1588                     u1610 11E6                     u1531 1584  
                   u1611 11E2                     u1540 12BE                     u1700 12A6  
                   u1620 11FC                     u1541 12BA                     u1701 12A2  
                   u1621 11F8                     u1454 0A22                     u1390 097E  
                   u1374 0932                     u1294 0842                     u1470 14DA  
                   u1550 12E2                     u1710 133A                     u1630 1212  
                   u1455 0A1E                     u1391 097A                     u1375 092E  
                   u1295 083E                     u1471 14D4                     u1551 12DE  
                   u1711 1336                     u1631 120E                     u1800 109A  
                   u1464 0A42                     u1384 0952                     u1480 14DC  
                   u1560 12F2                     u1720 1350                     u1640 1228  
                   u1801 1096                     u1465 0A3E                     u1385 094E  
                   u1561 12EE                     u1721 134C                     u1641 1224  
                   u1490 14A2                     u1570 14FA                     u1650 123E  
                   u1730 1382                     u1810 1182                     u1491 149C  
                   u1571 14F6                     u1651 123A                     u1731 137E  
                   u1811 117E                     u1820 10BE                     u1660 125E  
                   u1580 1698                     u1740 1392                     u1821 10BA  
                   u1661 125A                     u1581 1694                     u1741 138E  
                   u1830 10D8                     u1750 0FFA                     u1670 1276  
                   u1590 152A                     u1831 10D4                     u1751 0FF6  
                   u1671 1270                     u1591 1526                     u1840 10F2  
                   u1760 1014                     u1680 1278                     u1841 10EE  
                   u1761 1010                     u1850 1110                     u1770 103A  
                   u1690 1292                     u1851 110C                     u1771 1036  
                   u1691 128E                     u1860 1126                     u1780 1058  
                   u1861 1122                     u1781 1054                     u1870 114A  
                   u1790 1074                     u1871 1146                     u1791 1070  
                   _PIR1 0F9E                     _main 0C9E            ?_i2c_read_bit 0001  
                   prodh 0FF4                     prodl 0FF3                     start 0002  
           ___param_bank 0000          __end_of_i2cInit 1618          __end_of_bcd2dec 146E  
                  ?_main 0001          __end_of___awdiv 10AC         ?_lcdCommand4bits 0001  
        __end_of___awmod 115C          ___awdiv@divisor 0015          ___awdiv@counter 0017  
                  _RCREG 0FAE                    _RCSTA 0FAB                    _SPBRG 0FAF  
                  _PORTA 0F80                    _PORTB 0F81                    _PORTC 0F82  
                  _PORTD 0F83                    _PORTE 0F84                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISC 0F94                    _TRISD 0F95  
                  _TRISE 0F96                    _TXREG 0FAD                    _TXSTA 0FAC  
        __end_of_lcdData 1682          __end_of_lcdInit 11D4           ??_i2cWriteByte 000A  
    __end_of_i2cReadByte 1358          __end_of_pinMode 0C9E        __end_of_I2C_delay 16B0  
          _i2c_write_bit 12AC                    status 0FD8           ??_i2c_read_bit 0007  
       __end_of_Delay2ms 153E     __end_of_digitalWrite 0A50          __initialization 169A  
           __end_of_main 0E7E          i2cWriteByte@bit 000B         __end_of_i2c_stop 159A  
                 ??_main 002B     __end_of_dsStartClock 163E            __activetblptr 0000  
                 _ADCON1 0FC1         ___awdiv@dividend 0013           ?_i2c_write_bit 0001  
                 _SPBRGH 0FB0                ??_i2cInit 0007       dsWriteData@address 000C  
              ??_bcd2dec 0023                   ___wmul 163E                ??___awdiv 0017  
              ??___awmod 0029                   _dsInit 16A8         __end_of_read_SDA 14A6  
       __end_of_read_SCL 14DE         ___awdiv@quotient 0019          ___awmod@divisor 0027  
              ??_lcdData 0003                   isa$std 0001              _i2cReadByte 1304  
              ??_lcdInit 0004          ___awmod@counter 0029                ??_pinMode 0005  
           __mediumconst 0000        __end_of_Delay40us 169A               __accesstop 0060  
__end_of__initialization 169C            ___rparam_used 0001             ?_pulseEnable 0001  
            pinMode@type 0003     __end_of_i2cWriteByte 12AC           __pcstackCOMRAM 0001  
       i2cWriteByte@byte 0009        __end_of_i2c_start 142C     __end_of_i2c_read_bit 1510  
              ?_Delay2ms 0001          ??_i2c_write_bit 0007                ?_i2c_stop 0001  
             _dsReadData 13A0         dsReadData@result 0011               _lcdCommand 1358  
                ?___wmul 001B                  ?_dsInit 0001                  _BAUDCON 0FB8  
             ??_Delay2ms 0001     i2cReadByte@send_stop 0008             _digitalWrite 0802  
      __end_of_clear_SDA 15C4        __end_of_clear_SCL 15EE                ?_read_SDA 0001  
              ?_read_SCL 0001               ??_i2c_stop 0007                  _i2cInit 15EE  
           _dsStartClock 1618                _I2C_delay 16AE                  __Hparam 0000  
                __Lparam 0000                  _bcd2dec 142C      dsStartClock@seconds 0013  
                ___awdiv 0FE8                  ___awmod 10AC             __psmallconst 0800  
                __pcinit 169A                  _lcdData 1664                  __ramtop 0800  
                _lcdInit 115C                  __ptext0 0C9E                  __ptext1 115C  
                __ptext2 1358                  __ptext3 1510                  __ptext4 1664  
                __ptext5 11D4                  __ptext6 16A2                  __ptext7 1682  
                __ptext8 1618                  __ptext9 153E                  _pinMode 0A50  
       ___awmod@dividend 0025                Delay2ms@j 0001                Delay2ms@k 0002  
                _started 002D     end_of_initialization 169C               ??_read_SDA 0007  
             ??_read_SCL 0007              ?_dsReadData 000E           digitalRead@pin 0001  
             ?_I2C_delay 0001              ?_lcdCommand 0001            ??_digitalRead 0003  
           ?_i2cReadByte 0008          i2c_read_bit@bit 0007             _i2cWriteByte 124C  
          ??_dsWriteData 000E                _Delay40us 1682             _i2c_read_bit 14DE  
         __end_of___wmul 1664           __end_of_dsInit 16AE      start_initialization 169A  
    __end_of_digitalRead 0FE8                _i2c_start 13E6               ?_Delay40us 0001  
      ??_lcdCommand4bits 0002              ??_I2C_delay 0001      __end_of_dsWriteData 156C  
               ??___wmul 001F                 ??_dsInit 0007        dsReadData@address 000E  
            __pbssCOMRAM 002D               pinMode@pin 0001               ?_i2c_start 0001  
  __end_of_i2c_write_bit 1304                 ?_i2cInit 0001                _clear_SDA 159A  
              _clear_SCL 15C4                 ?_bcd2dec 0021                 ?___awdiv 0013  
               ?___awmod 0025              _digitalRead 0E7E                 ?_lcdData 0001  
               ?_lcdInit 0001            lcdCommand@cmd 0003              __smallconst 0800  
               ?_pinMode 0001              _dsWriteData 153E              ??_Delay40us 0001  
         ___wmul@product 001F             ??_dsReadData 0010               ?_clear_SDA 0001  
             ?_clear_SCL 0001             ??_lcdCommand 0003        ___wmul@multiplier 001B  
               _Delay2ms 1510       __end_of_dsReadData 13E6              ??_i2c_start 0007  
     __end_of_lcdCommand 13A0             lcdData@valor 0003                 _i2c_stop 156C  
               __Hrparam 0000            ??_pulseEnable 0001                 __Lrparam 0000  
       dsWriteData@value 000E                 _main$908 002B          _lcdCommand4bits 11D4  
               __ptext10 13A0                 __ptext11 124C                 __ptext20 0E7E  
               __ptext12 13E6                 __ptext21 15C4                 __ptext13 1304  
               __ptext30 10AC                 __ptext22 0802                 __ptext14 12AC  
               __ptext23 16AE                 __ptext15 156C                 __ptext24 16A8  
               __ptext16 159A                 __ptext25 15EE                 __ptext17 14DE  
               __ptext26 0A50                 __ptext18 146E                 __ptext27 142C  
               __ptext19 14A6                 __ptext28 163E                 __ptext29 0FE8  
               _read_SDA 146E                 _read_SCL 14A6              ??_clear_SDA 0007  
            ??_clear_SCL 0007               Delay40us@j 0001                 lcdInit@i 0004  
               isa$xinst 0000      __end_of_pulseEnable 16A8            ?_digitalWrite 0001  
      digitalWrite@value 0003            ?_dsStartClock 0001             bcd2dec@value 0021  
           ?_digitalRead 0001  __end_of_lcdCommand4bits 124C           ??_digitalWrite 0005  
        digitalWrite@pin 0001             ?_dsWriteData 000C           ??_dsStartClock 0013  
    lcdCommand4bits@data 0001       lcdCommand4bits@cmd 0002              _pulseEnable 16A2  
