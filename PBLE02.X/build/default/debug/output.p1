Version 4.0 HI-TECH Software Intermediate Code
"27 ./lcd.h
[; ;./lcd.h: 27: void lcdInit(void);
[v _lcdInit `(v ~T0 @X0 0 ef ]
"25 output.c
[; ;output.c: 25:     if (numTela == STATE_HOUR) {
[c E20 0 1 2 3 4 5 6 7 .. ]
[n E20 . STATE_ALARM_UPPER STATE_ALARM_LOWER STATE_HOUR STATE_MIN STATE_SEC STATE_IDIOMA STATE_OVER_LIMIT STATE_FIM  ]
"23 ./lcd.h
[; ;./lcd.h: 23: void lcdCommand(unsigned char cmd);
[v _lcdCommand `(v ~T0 @X0 0 ef1`uc ]
"29
[; ;./lcd.h: 29: void lcdString(char msg[]);
[v _lcdString `(v ~T0 @X0 0 ef1`*uc ]
"21 ./var.h
[; ;./var.h: 21: char getHOUR();
[v _getHOUR `(uc ~T0 @X0 0 e? ]
"19
[; ;./var.h: 19: char getMIN();
[v _getMIN `(uc ~T0 @X0 0 e? ]
"17
[; ;./var.h: 17: char getSEC();
[v _getSEC `(uc ~T0 @X0 0 e? ]
"26 ./lcd.h
[; ;./lcd.h: 26: void lcdData(unsigned char valor);
[v _lcdData `(v ~T0 @X0 0 ef1`uc ]
"30
[; ;./lcd.h: 30: void lcdInt(int val);
[v _lcdInt `(v ~T0 @X0 0 ef1`i ]
"25 ./var.h
[; ;./var.h: 25: int getAlarmUpperLevel(void);
[v _getAlarmUpperLevel `(i ~T0 @X0 0 ef ]
"13
[; ;./var.h: 13: int getLevel(void);
[v _getLevel `(i ~T0 @X0 0 ef ]
"23
[; ;./var.h: 23: int getAlarmLowerLevel(void);
[v _getAlarmLowerLevel `(i ~T0 @X0 0 ef ]
"27
[; ;./var.h: 27: char getLanguage(void);
[v _getLanguage `(uc ~T0 @X0 0 ef ]
[v F56 `*uc ~T0 @X0 -> 2 `i t ]
"9 output.c
[; ;output.c: 9: static char * msgs[STATE_FIM][2] = {
[v _msgs `F56 ~T0 @X0 -> 7 `i s ]
[i _msgs
:U ..
:U ..
:s 1C
:s 2C
..
:U ..
:s 3C
:s 4C
..
:U ..
:s 5C
:s 6C
..
:U ..
:s 7C
:s 8C
..
:U ..
:s 9C
:s 10C
..
:U ..
:s 11C
:s 12C
..
:U ..
:s 13C
:s 14C
..
..
]
"19
[; ;output.c: 19: void outputInit(void) {
[v _outputInit `(v ~T0 @X0 1 ef ]
{
[e :U _outputInit ]
[f ]
"20
[; ;output.c: 20:     lcdInit();
[e ( _lcdInit ..  ]
"21
[; ;output.c: 21: }
[e :UE 1 ]
}
"23
[; ;output.c: 23: void outputPrint(int numTela, int idioma) {
[v _outputPrint `(v ~T0 @X0 1 ef2`i`i ]
{
[e :U _outputPrint ]
[v _numTela `i ~T0 @X0 1 r1 ]
[v _idioma `i ~T0 @X0 1 r2 ]
[f ]
"25
[; ;output.c: 25:     if (numTela == STATE_HOUR) {
[e $ ! == _numTela -> . `E20 2 `i 3  ]
{
"26
[; ;output.c: 26:         lcdCommand(0x80);
[e ( _lcdCommand (1 -> -> 128 `i `uc ]
"27
[; ;output.c: 27:         lcdString(msgs[numTela][idioma]);
[e ( _lcdString (1 *U + &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux * -> -> _idioma `ui `ux -> -> # *U &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux `ui `ux ]
"28
[; ;output.c: 28:         lcdCommand(0xC0);
[e ( _lcdCommand (1 -> -> 192 `i `uc ]
"29
[; ;output.c: 29:         char hour, min, sec;
[v _hour `uc ~T0 @X0 1 a ]
[v _min `uc ~T0 @X0 1 a ]
[v _sec `uc ~T0 @X0 1 a ]
"30
[; ;output.c: 30:         hour = getHOUR();
[e = _hour ( _getHOUR ..  ]
"31
[; ;output.c: 31:         min = getMIN();
[e = _min ( _getMIN ..  ]
"32
[; ;output.c: 32:         sec = getSEC();
[e = _sec ( _getSEC ..  ]
"33
[; ;output.c: 33:         lcdData((hour / 10) % 10 + 48);
[e ( _lcdData (1 -> + % / -> _hour `i -> 10 `i -> 10 `i -> 48 `i `uc ]
"34
[; ;output.c: 34:         lcdData(hour % 10 + 48);
[e ( _lcdData (1 -> + % -> _hour `i -> 10 `i -> 48 `i `uc ]
"35
[; ;output.c: 35:         lcdData(':');
[e ( _lcdData (1 -> -> 58 `ui `uc ]
"36
[; ;output.c: 36:         lcdData((min / 10) % 10 + 48);
[e ( _lcdData (1 -> + % / -> _min `i -> 10 `i -> 10 `i -> 48 `i `uc ]
"37
[; ;output.c: 37:         lcdData(min % 10 + 48);
[e ( _lcdData (1 -> + % -> _min `i -> 10 `i -> 48 `i `uc ]
"38
[; ;output.c: 38:         lcdData(':');
[e ( _lcdData (1 -> -> 58 `ui `uc ]
"39
[; ;output.c: 39:         lcdData((sec / 10) % 10 + 48);
[e ( _lcdData (1 -> + % / -> _sec `i -> 10 `i -> 10 `i -> 48 `i `uc ]
"40
[; ;output.c: 40:         lcdData(sec % 10 + 48);
[e ( _lcdData (1 -> + % -> _sec `i -> 10 `i -> 48 `i `uc ]
"41
[; ;output.c: 41:     }
}
[e :U 3 ]
"43
[; ;output.c: 43:     if (numTela == STATE_MIN) {
[e $ ! == _numTela -> . `E20 3 `i 4  ]
{
"44
[; ;output.c: 44:         lcdCommand(0x80);
[e ( _lcdCommand (1 -> -> 128 `i `uc ]
"45
[; ;output.c: 45:         lcdString(msgs[numTela][idioma]);
[e ( _lcdString (1 *U + &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux * -> -> _idioma `ui `ux -> -> # *U &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux `ui `ux ]
"46
[; ;output.c: 46:         lcdCommand(0xC0);
[e ( _lcdCommand (1 -> -> 192 `i `uc ]
"47
[; ;output.c: 47:         char hour, min, sec;
[v _hour `uc ~T0 @X0 1 a ]
[v _min `uc ~T0 @X0 1 a ]
[v _sec `uc ~T0 @X0 1 a ]
"48
[; ;output.c: 48:         hour = getHOUR();
[e = _hour ( _getHOUR ..  ]
"49
[; ;output.c: 49:         min = getMIN();
[e = _min ( _getMIN ..  ]
"50
[; ;output.c: 50:         sec = getSEC();
[e = _sec ( _getSEC ..  ]
"51
[; ;output.c: 51:         lcdData((hour / 10) % 10 + 48);
[e ( _lcdData (1 -> + % / -> _hour `i -> 10 `i -> 10 `i -> 48 `i `uc ]
"52
[; ;output.c: 52:         lcdData(hour % 10 + 48);
[e ( _lcdData (1 -> + % -> _hour `i -> 10 `i -> 48 `i `uc ]
"53
[; ;output.c: 53:         lcdData(':');
[e ( _lcdData (1 -> -> 58 `ui `uc ]
"54
[; ;output.c: 54:         lcdData((min / 10) % 10 + 48);
[e ( _lcdData (1 -> + % / -> _min `i -> 10 `i -> 10 `i -> 48 `i `uc ]
"55
[; ;output.c: 55:         lcdData(min % 10 + 48);
[e ( _lcdData (1 -> + % -> _min `i -> 10 `i -> 48 `i `uc ]
"56
[; ;output.c: 56:         lcdData(':');
[e ( _lcdData (1 -> -> 58 `ui `uc ]
"57
[; ;output.c: 57:         lcdData((sec / 10) % 10 + 48);
[e ( _lcdData (1 -> + % / -> _sec `i -> 10 `i -> 10 `i -> 48 `i `uc ]
"58
[; ;output.c: 58:         lcdData(sec % 10 + 48);
[e ( _lcdData (1 -> + % -> _sec `i -> 10 `i -> 48 `i `uc ]
"59
[; ;output.c: 59:     }
}
[e :U 4 ]
"61
[; ;output.c: 61:     if (numTela == STATE_SEC) {
[e $ ! == _numTela -> . `E20 4 `i 5  ]
{
"62
[; ;output.c: 62:         lcdCommand(0x80);
[e ( _lcdCommand (1 -> -> 128 `i `uc ]
"63
[; ;output.c: 63:         lcdString(msgs[numTela][idioma]);
[e ( _lcdString (1 *U + &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux * -> -> _idioma `ui `ux -> -> # *U &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux `ui `ux ]
"64
[; ;output.c: 64:         lcdCommand(0xC0);
[e ( _lcdCommand (1 -> -> 192 `i `uc ]
"65
[; ;output.c: 65:         char hour, min, sec;
[v _hour `uc ~T0 @X0 1 a ]
[v _min `uc ~T0 @X0 1 a ]
[v _sec `uc ~T0 @X0 1 a ]
"66
[; ;output.c: 66:         hour = getHOUR();
[e = _hour ( _getHOUR ..  ]
"67
[; ;output.c: 67:         min = getMIN();
[e = _min ( _getMIN ..  ]
"68
[; ;output.c: 68:         sec = getSEC();
[e = _sec ( _getSEC ..  ]
"69
[; ;output.c: 69:         lcdData((hour / 10) % 10 + 48);
[e ( _lcdData (1 -> + % / -> _hour `i -> 10 `i -> 10 `i -> 48 `i `uc ]
"70
[; ;output.c: 70:         lcdData(hour % 10 + 48);
[e ( _lcdData (1 -> + % -> _hour `i -> 10 `i -> 48 `i `uc ]
"71
[; ;output.c: 71:         lcdData(':');
[e ( _lcdData (1 -> -> 58 `ui `uc ]
"72
[; ;output.c: 72:         lcdData((min / 10) % 10 + 48);
[e ( _lcdData (1 -> + % / -> _min `i -> 10 `i -> 10 `i -> 48 `i `uc ]
"73
[; ;output.c: 73:         lcdData(min % 10 + 48);
[e ( _lcdData (1 -> + % -> _min `i -> 10 `i -> 48 `i `uc ]
"74
[; ;output.c: 74:         lcdData(':');
[e ( _lcdData (1 -> -> 58 `ui `uc ]
"75
[; ;output.c: 75:         lcdData((sec / 10) % 10 + 48);
[e ( _lcdData (1 -> + % / -> _sec `i -> 10 `i -> 10 `i -> 48 `i `uc ]
"76
[; ;output.c: 76:         lcdData(sec % 10 + 48);
[e ( _lcdData (1 -> + % -> _sec `i -> 10 `i -> 48 `i `uc ]
"77
[; ;output.c: 77:     }
}
[e :U 5 ]
"79
[; ;output.c: 79:     if (numTela == STATE_ALARM_UPPER) {
[e $ ! == _numTela -> . `E20 0 `i 6  ]
{
"80
[; ;output.c: 80:         lcdCommand(0x80);
[e ( _lcdCommand (1 -> -> 128 `i `uc ]
"81
[; ;output.c: 81:         lcdString(msgs[numTela][idioma]);
[e ( _lcdString (1 *U + &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux * -> -> _idioma `ui `ux -> -> # *U &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux `ui `ux ]
"82
[; ;output.c: 82:         lcdCommand(0xC0);
[e ( _lcdCommand (1 -> -> 192 `i `uc ]
"83
[; ;output.c: 83:         lcdInt(getAlarmUpperLevel());
[e ( _lcdInt (1 ( _getAlarmUpperLevel ..  ]
"84
[; ;output.c: 84:         lcdString("     ");
[e ( _lcdString (1 :s 15C ]
"85
[; ;output.c: 85:         lcdInt(getLevel());
[e ( _lcdInt (1 ( _getLevel ..  ]
"86
[; ;output.c: 86:     }
}
[e :U 6 ]
"87
[; ;output.c: 87:     if (numTela == STATE_ALARM_LOWER) {
[e $ ! == _numTela -> . `E20 1 `i 7  ]
{
"88
[; ;output.c: 88:         lcdCommand(0x80);
[e ( _lcdCommand (1 -> -> 128 `i `uc ]
"89
[; ;output.c: 89:         lcdString(msgs[numTela][idioma]);
[e ( _lcdString (1 *U + &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux * -> -> _idioma `ui `ux -> -> # *U &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux `ui `ux ]
"90
[; ;output.c: 90:         lcdCommand(0xC0);
[e ( _lcdCommand (1 -> -> 192 `i `uc ]
"91
[; ;output.c: 91:         lcdInt(getAlarmLowerLevel());
[e ( _lcdInt (1 ( _getAlarmLowerLevel ..  ]
"92
[; ;output.c: 92:         lcdString("     ");
[e ( _lcdString (1 :s 16C ]
"93
[; ;output.c: 93:         lcdInt(getLevel());
[e ( _lcdInt (1 ( _getLevel ..  ]
"94
[; ;output.c: 94:     }
}
[e :U 7 ]
"95
[; ;output.c: 95:     if (numTela == STATE_IDIOMA) {
[e $ ! == _numTela -> . `E20 5 `i 8  ]
{
"96
[; ;output.c: 96:         lcdCommand(0x80);
[e ( _lcdCommand (1 -> -> 128 `i `uc ]
"97
[; ;output.c: 97:         lcdString(msgs[numTela][idioma]);
[e ( _lcdString (1 *U + &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux * -> -> _idioma `ui `ux -> -> # *U &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux `ui `ux ]
"98
[; ;output.c: 98:         lcdCommand(0xC0);
[e ( _lcdCommand (1 -> -> 192 `i `uc ]
"99
[; ;output.c: 99:         if (getLanguage() == 0) {
[e $ ! == -> ( _getLanguage ..  `i -> 0 `i 9  ]
{
"100
[; ;output.c: 100:             lcdString("Portugues       ");
[e ( _lcdString (1 :s 17C ]
"101
[; ;output.c: 101:         }
}
[e :U 9 ]
"102
[; ;output.c: 102:         if (getLanguage() == 1) {
[e $ ! == -> ( _getLanguage ..  `i -> 1 `i 10  ]
{
"103
[; ;output.c: 103:             lcdString("English         ");
[e ( _lcdString (1 :s 18C ]
"104
[; ;output.c: 104:         }
}
[e :U 10 ]
"106
[; ;output.c: 106:     }
}
[e :U 8 ]
"107
[; ;output.c: 107:     if (numTela == STATE_OVER_LIMIT) {
[e $ ! == _numTela -> . `E20 6 `i 11  ]
{
"108
[; ;output.c: 108:         lcdCommand(0x80);
[e ( _lcdCommand (1 -> -> 128 `i `uc ]
"109
[; ;output.c: 109:         lcdString(msgs[numTela][idioma]);
[e ( _lcdString (1 *U + &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux * -> -> _idioma `ui `ux -> -> # *U &U *U + &U _msgs * -> -> _numTela `ui `ux -> * -> # *U &U *U &U _msgs `ui -> -> 2 `i `ui `ux `ui `ux ]
"110
[; ;output.c: 110:         lcdCommand(0xC0);
[e ( _lcdCommand (1 -> -> 192 `i `uc ]
"111
[; ;output.c: 111:         lcdString("               ");
[e ( _lcdString (1 :s 19C ]
"112
[; ;output.c: 112:     }
}
[e :U 11 ]
"114
[; ;output.c: 114: }
[e :UE 2 ]
}
[a 13C 65 76 65 82 77 69 32 65 67 73 79 78 65 68 79 33 0 ]
[a 14C 65 76 65 82 77 32 65 67 84 73 86 65 84 69 68 33 0 ]
[a 1C 65 108 97 114 109 101 32 83 117 112 101 114 105 111 114 32 0 ]
[a 3C 65 108 97 114 109 101 32 73 110 102 101 114 105 111 114 32 0 ]
[a 12C 67 104 97 110 103 101 32 108 97 110 103 117 97 103 101 32 0 ]
[a 11C 65 108 116 101 114 97 114 32 105 100 105 111 109 97 32 32 0 ]
[a 5C 65 108 116 101 114 97 114 32 72 79 82 65 83 32 32 32 0 ]
[a 4C 76 111 119 101 114 32 65 108 97 114 109 32 32 32 32 32 0 ]
[a 2C 85 112 112 101 114 32 65 108 97 114 109 32 32 32 32 32 0 ]
[a 6C 67 104 97 110 103 101 32 72 79 85 82 32 32 32 32 32 0 ]
[a 7C 65 108 116 101 114 97 114 32 77 73 78 32 32 32 32 32 0 ]
[a 9C 65 108 116 101 114 97 114 32 83 69 67 32 32 32 32 32 0 ]
[a 8C 67 104 97 110 103 101 32 77 73 78 32 32 32 32 32 32 0 ]
[a 10C 67 104 97 110 103 101 32 83 69 67 32 32 32 32 32 32 0 ]
[a 17C 80 111 114 116 117 103 117 101 115 32 32 32 32 32 32 32 0 ]
[a 18C 69 110 103 108 105 115 104 32 32 32 32 32 32 32 32 32 0 ]
[a 19C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 15C 32 32 32 32 32 0 ]
[a 16C 32 32 32 32 32 0 ]
